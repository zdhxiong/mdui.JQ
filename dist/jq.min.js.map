{"version":3,"sources":["jq.js"],"names":["global","factory","exports","module","define","amd","self","JQ","this","t","e","bubbles","cancelable","detail","n","document","createEvent","initCustomEvent","MouseEvent","initMouseEvent","window","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","prototype","Event","CustomEvent","arr","i","length","$","selector","html","trim","toCreate","tags","li","tr","td","th","tbody","option","Object","keys","forEach","childTag","parentTag","indexOf","tempParent","createElement","innerHTML","childNodes","push","elems","match","querySelectorAll","getElementById","slice","i$1","ready","nodeType","i$2","extend","this$1","args","len","arguments","prop","target","shift","loop","isArrayLike","isObjectLike","isFunction","isString","each","obj","callback","call","unique","result","val","merge","first","second","fn","test","readyState","body","addEventListener","get","index","undefined","add","nameIndex","name","className","classes","split","elem","j","cls","classList","$elem","_this","parentNode","insertBefore","cloneNode","nextSibling","after","insertAfter","globalOptions","ajaxEvents","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","handlers","mduiElementId","fnFalse","getElementId","element","remove","eventName","func","event","filter","handler","toString","sel","getHandlers","removeEventListener","proxy","map","elements","ref","value","ret","concat","apply","dir","nodes","node","is","off","type","on","data","one","origCallback","elementId","useCapture","callFn","_detail","preventDefault","stopPropagation","proxyfn","_data","find","reverse","contains","params","xhr","options","newChild","newChilds","copyByClone","tempDiv","child","appendChild","appendTo","append","set","key","setAttribute","style","argLength","getAttribute","getComputedStyle","getPropertyValue","k","v","before","children","_","__","childNode","el","clone","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","$compareWith","eq","closest","parents","dataNS","storage","attributes","attribute","replace","u","charAt","toUpperCase","dataKey","parent","documentElement","removeData","empty","ele","$selector","foundElements","has","$targets","hasClass","Width","Height","isNaN","Number","css","isWindow","DOCUMENT_NODE","isDocument","IEFixValue","isWidth","parseFloat","hide","display","props","0","1","2","defaults","last","not","$excludes","offset","getBoundingClientRect","left","pageXOffset","top","pageYOffset","width","height","offsetParent","eName","position","parentOffset","nodeName","toLowerCase","isNodeName","prependTo","prepend","removeChild","removeAttr","attr","removeAttribute","removeProp","replaceWith","newContent","replaceAll","serializeArray","disabled","checked","serialize","encodeURIComponent","join","elementDisplay","param","destructure","keyTmp","Array","isArray","show","defaultDisplay","siblings","prevAll","nextAll","toggle","trigger","evt","isMouseEvent","dispatchEvent","jsonpID","isQueryStringData","method","appendQuery","url","query","ajax","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","jsonp","jsonpCallback","Date","now","contentType","timeout","callbacks","isCanceled","globals","eventParams","triggerEvent","triggerCallback","result1","result2","sendData","location","ArrayBuffer","Blob","Document","FormData","constructor","abortTimeout","callbackName","requestUrl","script","onerror","clearTimeout","src","setTimeout","xhrTimeout","XMLHttpRequest","open","setRequestHeader","crossDomain","RegExp","$2","host","onload","textStatus","responseData","isHttpStatusSuccess","status","JSON","parse","responseText","err","responseType","response","statusText","onabort","abort","send","ajaxSetup"],"mappings":"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","file":"jq.min.js","sourcesContent":["/**\n * JQ 1.0.0 (https://github.com/zdhxiong/mdui.JQ#readme)\n * Copyright 2018-2019 zdhxiong\n * Licensed under MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.JQ = factory());\n}(this, function () { 'use strict';\n\n  !function () {\n    try {\n      return new MouseEvent(\"test\")\n    } catch (e) {\n    }\n    var e = function (e, t) {\n      t = t || {bubbles: !1, cancelable: !1};\n      var n = document.createEvent(\"MouseEvent\");\n      return n.initMouseEvent(e, t.bubbles, t.cancelable, window, 0, t.screenX || 0, t.screenY || 0, t.clientX || 0, t.clientY || 0, t.ctrlKey || !1, t.altKey || !1, t.shiftKey || !1, t.metaKey || !1, t.button || 0, t.relatedTarget || null), n\n    };\n    e.prototype = Event.prototype, window.MouseEvent = e;\n  }();\n\n  !function(){function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),n}\"function\"!=typeof window.CustomEvent&&(t.prototype=window.Event.prototype,window.CustomEvent=t);}();\n\n  var JQ = function JQ(arr) {\n    var self = this;\n\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n\n    self.length = arr.length;\n\n    return this;\n  };\n\n  function $(selector) {\n    var arr = [];\n\n    if (!selector) {\n      return new JQ(arr);\n    }\n\n    if (selector instanceof JQ) {\n      return selector;\n    }\n\n    if (typeof selector === 'string') {\n      var html = selector.trim();\n\n      if (html[0] === '<' && html[html.length - 1] === '>') {\n        // 创建 HTML 字符串\n        var toCreate = 'div';\n\n        var tags = {\n          li: 'ul',\n          tr: 'tbody',\n          td: 'tr',\n          th: 'tr',\n          tbody: 'table',\n          option: 'select',\n        };\n\n        Object.keys(tags).forEach(function (childTag) {\n          var parentTag = tags[childTag];\n\n          if (html.indexOf((\"<\" + childTag)) === 0) {\n            toCreate = parentTag;\n          }\n        });\n\n        var tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        // 选择器\n        var elems = selector[0] === '#' && !selector.match(/[ .<>:~]/)\n          ? [document.getElementById(selector.slice(1))]\n          : document.querySelectorAll(selector);\n\n        for (var i$1 = 0; i$1 < elems.length; i$1 += 1) {\n          if (elems[i$1]) {\n            arr.push(elems[i$1]);\n          }\n        }\n      }\n\n      return new JQ(arr);\n    }\n\n    if (typeof selector === 'function') {\n      // function\n      return $(document).ready(selector);\n    }\n\n    if (selector.nodeType || selector === window || selector === document) {\n      // Node\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // NodeList\n      for (var i$2 = 0; i$2 < selector.length; i$2 += 1) {\n        arr.push(selector[i$2]);\n      }\n    }\n\n    return new JQ(arr);\n  }\n\n  function extend() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (!args.length) {\n      return this;\n    }\n\n    // $.extend(obj)\n    if (args.length === 1) {\n      Object.keys(args[0]).forEach(function (prop) {\n        this$1[prop] = args[0][prop];\n      });\n\n      return this;\n    }\n\n    // $.extend({}, defaults[, obj])\n    var target = args.shift();\n\n    var loop = function ( i ) {\n      Object.keys(args[i]).forEach(function (prop) {\n        target[prop] = args[i][prop];\n      });\n    };\n\n    for (var i = 0; i < args.length; i += 1) loop( i );\n\n    return target;\n  }\n\n  $.fn = JQ.prototype;\n  $.fn.extend = extend;\n  $.extend = extend;\n\n  /**\n   * DOM 加载完毕后调用的函数\n   * @param callback\n   * @returns {ready}\n   */\n  $.fn.ready = function (callback) {\n    if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n      callback($);\n    } else {\n      document.addEventListener('DOMContentLoaded', function () {\n        callback($);\n      }, false);\n    }\n\n    return this;\n  };\n\n  function isNodeName(element, name) {\n    return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  function isArrayLike(target) {\n    return typeof target.length === 'number';\n  }\n\n  function isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n  }\n\n  function isFunction(target) {\n    return typeof target === 'function';\n  }\n\n  function isString(target) {\n    return typeof target === 'string';\n  }\n\n  function isWindow(target) {\n    return target && target === target.window;\n  }\n\n  function isDocument(target) {\n    return target && target.nodeType === target.DOCUMENT_NODE;\n  }\n\n  /**\n   * 循环数组或对象\n   * @param obj\n   * @param callback\n   * @returns {*}\n   */\n  function each(obj, callback) {\n    if (isArrayLike(obj)) {\n      for (var i = 0; i < obj.length; i += 1) {\n        if (callback.call(obj[i], i, obj[i]) === false) {\n          return obj;\n        }\n      }\n    } else {\n      var keys = Object.keys(obj);\n      for (var i$1 = 0; i$1 < keys.length; i$1 += 1) {\n        if (callback.call(obj[keys[i$1]], keys[i$1], obj[keys[i$1]]) === false) {\n          return obj;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  /**\n   * 删除数组中重复元素\n   * @param arr {Array}\n   * @returns {Array}\n   */\n  function unique(arr) {\n    var result = [];\n\n    each(arr, function (i, val) {\n      if (result.indexOf(val) === -1) {\n        result.push(val);\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * 把对象合并到第一个参数中，并返回第一个参数\n   * @param first\n   * @param second\n   * @returns {*}\n   */\n  function merge(first, second) {\n    each(second, function (i, val) {\n      first.push(val);\n    });\n\n    return first;\n  }\n\n  /**\n   * 获取指定 DOM 元素，没有 index 参数时，获取所有 DOM 的数组\n   */\n  $.fn.get = function (index) {\n    return index === undefined\n      ? [].slice.call(this)\n      : this[index >= 0 ? index : index + this.length];\n  };\n\n  /**\n   * 添加匹配的元素到当前对象中\n   * @param selector {String|JQ}\n   * @returns {JQ}\n   */\n  $.fn.add = function (selector) {\n    return new JQ(unique(merge(this.get(), $(selector))));\n  };\n\n  /**\n   * 遍历对象\n   */\n  $.fn.each = function (callback) {\n    return each(this, callback);\n  };\n\n  /**\n   * addClass - 添加 CSS 类，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  /**\n   * removeClass - 移除 CSS 类，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  /**\n   * toggleClass - 切换 CSS 类名，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  each(['add', 'remove', 'toggle'], function (nameIndex, name) {\n    $.fn[(name + \"Class\")] = function (className) {\n      if (!className) {\n        return this;\n      }\n\n      var classes = className.split(' ');\n\n      return this.each(function (i, elem) {\n        each(classes, function (j, cls) {\n          elem.classList[name](cls);\n        });\n      });\n    };\n  });\n\n  /**\n   * insertBefore - 插入到指定元素的前面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * insertAfter - 插入到指定元素的后面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each(['insertBefore', 'insertAfter'], function (nameIndex, name) {\n    $.fn[name] = function (selector) {\n      var $elem = $(selector);\n\n      return this.each(function (i, _this) {\n        $elem.each(function (j, elem) {\n          elem.parentNode.insertBefore(\n            $elem.length === 1 ? _this : _this.cloneNode(true),\n            nameIndex === 0 ? elem : elem.nextSibling\n          );\n        });\n      });\n    };\n  });\n\n  /**\n   * 插入到指定元素后面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  $.fn.after = function (selector) {\n    $(selector).insertAfter(this);\n    return this;\n  };\n\n  var globalOptions = {};\n\n  // 全局事件名\n  var ajaxEvents = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n  };\n\n  // 存储事件\n  var handlers = {\n    // i: { // 元素ID\n    //   j: { // 事件ID\n    //     e: 事件名\n    //     fn: 事件处理函数\n    //     i: 事件ID\n    //     proxy:\n    //     sel: 选择器\n    //   }\n    // }\n  };\n\n  // 元素ID\n  var mduiElementId = 1;\n\n  function fnFalse() {\n    return false;\n  }\n\n  /**\n   * 为元素赋予一个唯一的ID\n   * @param element\n   * @returns {number|*}\n   */\n  function getElementId(element) {\n    if (!element.mduiElementId) {\n      mduiElementId += 1;\n      element.mduiElementId = mduiElementId;\n    }\n\n    return element.mduiElementId;\n  }\n\n  /**\n   * 获取匹配的事件\n   * @param element\n   * @param eventName\n   * @param func\n   * @param selector\n   * @returns {Array}\n   */\n  function getHandlers(element, eventName, func, selector) {\n    return (handlers[getElementId(element)] || [])\n      .filter(function (handler) { return handler\n        && (!eventName || handler.e === eventName)\n        && (!func || handler.fn.toString() === func.toString())\n        && (!selector || handler.sel === selector); });\n  }\n\n  /**\n   * 添加事件监听\n   * @param element\n   * @param eventName\n   * @param func\n   * @param data\n   * @param selector\n   */\n  function add(element, eventName, func, data, selector) {\n    var elementId = getElementId(element);\n\n    if (!handlers[elementId]) {\n      handlers[elementId] = [];\n    }\n\n    // 传入 data.useCapture 来设置 useCapture: true\n    var useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n      useCapture = true;\n    }\n\n    eventName.split(' ').forEach(function (event) {\n      var handler = {\n        e: event,\n        fn: func,\n        sel: selector,\n        i: handlers[elementId].length,\n      };\n\n      function callFn(e, elem) {\n        // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n        /* eslint no-underscore-dangle: 0 */\n        var result = func.apply(elem, e._detail === undefined ? [e] : [e].concat(e._detail));\n\n        if (result === false) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n\n      function proxyfn(e) {\n        e._data = data;\n\n        if (selector) {\n          // 事件代理\n          $(element)\n            .find(selector)\n            .get()\n            .reverse()\n            .forEach(function (elem) {\n              if (elem === e.target || $.contains(elem, e.target)) {\n                callFn(e, elem);\n              }\n            });\n        } else {\n          // 不使用事件代理\n          callFn(e, element);\n        }\n      }\n\n      handler.proxy = proxyfn;\n      handlers[elementId].push(handler);\n      element.addEventListener(handler.e, proxyfn, useCapture);\n    });\n  }\n\n  /**\n   * 移除事件监听\n   * @param element\n   * @param eventName\n   * @param func\n   * @param selector\n   */\n  function remove(element, eventName, func, selector) {\n    (eventName || '').split(' ').forEach(function (event) {\n      getHandlers(element, event, func, selector).forEach(function (handler) {\n        delete handlers[getElementId(element)][handler.i];\n        element.removeEventListener(handler.e, handler.proxy, false);\n      });\n    });\n  }\n\n  /**\n   * 取消绑定事件\n   *\n   * $().off(eventName, selector);\n   * $().off(eventName, callback);\n   * $().off(eventName, false);\n   */\n  $.fn.off = function (eventName, selector, callback) {\n    var self = this;\n\n    // event 使用 事件:函数 键值对\n    // event = {\n    //   'event1': callback1,\n    //   'event2': callback2\n    // }\n    //\n    // $().off(event, selector)\n    if (eventName && !isString(eventName)) {\n      each(eventName, function (type, fn) {\n        self.off(type, selector, fn);\n      });\n\n      return self;\n    }\n\n    // selector 不存在\n    // $().off(event, callback)\n    if (!isString(selector) && !isFunction(callback) && callback !== false) {\n      callback = selector;\n      selector = undefined;\n    }\n\n    // callback 为 false\n    // $().off(event, false)\n    if (callback === false) {\n      callback = fnFalse;\n    }\n\n    return self.each(function () {\n      remove(this, eventName, callback, selector);\n    });\n  };\n\n  /**\n   * 绑定事件\n   *\n   * $().on({eventName: fn}, selector, data);\n   * $().on({eventName: fn}, selector)\n   * $().on({eventName: fn})\n   * $().on(eventName, selector, data, fn);\n   * $().on(eventName, selector, fn);\n   * $().on(eventName, data, fn);\n   * $().on(eventName, fn);\n   * $().on(eventName, false);\n   *\n   * @param eventName\n   * @param selector\n   * @param data\n   * @param callback\n   * @param one 是否是 one 方法，只在 JQ 内部使用\n   * @returns\n   */\n  $.fn.on = function (eventName, selector, data, callback, one) {\n    var self = this;\n\n    // 默认\n    // $().on(event, selector, data, callback)\n\n    // event 使用 事件:函数 键值对\n    // event = {\n    //   'event1': callback1,\n    //   'event2': callback2\n    // }\n    //\n    // $().on(event, selector, data)\n    if (eventName && !isString(eventName)) {\n      each(eventName, function (type, fn) {\n        self.on(type, selector, data, fn);\n      });\n\n      return self;\n    }\n\n    // selector 不存在\n    // $().on(event, data, callback)\n    if (!isString(selector) && !isFunction(callback) && callback !== false) {\n      callback = data;\n      data = selector;\n      selector = undefined;\n    }\n\n    // data 不存在\n    // $().on(event, callback)\n    if (isFunction(data) || data === false) {\n      callback = data;\n      data = undefined;\n    }\n\n    // callback 为 false\n    // $().on(event, false)\n    if (callback === false) {\n      callback = fnFalse;\n    }\n\n    if (one === 1) {\n      var origCallback = callback;\n      callback = function () {\n        self.off(eventName, selector, callback);\n        /* eslint prefer-rest-params: 0 */\n        return origCallback.apply(this, arguments);\n      };\n    }\n\n    return this.each(function () {\n      add(this, eventName, callback, data, selector);\n    });\n  };\n\n  // 监听全局事件\n  //\n  // 通过 $(document).on('success.mdui.ajax', function (event, params) {}) 调用时，包含两个参数\n  // event: 事件对象\n  // params: {\n  //   xhr: XMLHttpRequest 对象\n  //   options: ajax 请求的配置参数\n  //   data: ajax 请求返回的数据\n  // }\n\n  // 全局 Ajax 事件快捷方法\n  // $(document).ajaxStart(function (event, xhr, options) {})\n  // $(document).ajaxSuccess(function (event, xhr, options, data) {})\n  // $(document).ajaxError(function (event, xhr, options) {})\n  // $(document).ajaxComplete(function (event, xhr, options) {})\n  each(ajaxEvents, function (name, eventName) {\n    $.fn[name] = function (fn) {\n      return this.on(eventName, function (e, params) {\n        fn(e, params.xhr, params.options, params.data);\n      });\n    };\n  });\n\n  /**\n   * append - 在元素内部追加内容\n   * @param newChild {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * prepend - 在元素内部前置内容\n   * @param newChild {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each(['append', 'prepend'], function (nameIndex, name) {\n    $.fn[name] = function (newChild) {\n      var newChilds;\n      var copyByClone = this.length > 1;\n\n      if (isString(newChild) && (newChild[0] !== '<' || newChild[newChild.length - 1] !== '>')) {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        newChilds = [].slice.call(tempDiv.childNodes);\n      } else {\n        newChilds = $(newChild).get();\n      }\n\n      if (nameIndex === 1) {\n        // prepend\n        newChilds.reverse();\n      }\n\n      return this.each(function (i, _this) {\n        each(newChilds, function (j, child) {\n          // 一个元素要同时追加到多个元素中，需要先复制一份，然后追加\n          if (copyByClone && i > 0) {\n            child = child.cloneNode(true);\n          }\n\n          if (nameIndex === 0) {\n            // append\n            _this.appendChild(child);\n          } else {\n            // prepend\n            _this.insertBefore(child, _this.childNodes[0]);\n          }\n        });\n      });\n    };\n  });\n\n  /**\n   * 追加到指定元素内容\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  $.fn.appendTo = function (selector) {\n    $(selector).append(this);\n    return this;\n  };\n\n  /**\n   * attr - 获取或设置元素的属性值\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  /**\n   * prop - 获取或设置元素的属性值\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  /**\n   * css - 获取或设置元素的样式\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  each(['attr', 'prop', 'css'], function (nameIndex, name) {\n    function set(elem, key, value) {\n      if (nameIndex === 0) {\n        elem.setAttribute(key, value);\n      } else if (nameIndex === 1) {\n        elem[key] = value;\n      } else {\n        elem.style[key] = value;\n      }\n    }\n\n    function get(elem, key) {\n      if (!elem) {\n        return undefined;\n      }\n\n      if (nameIndex === 0) {\n        return elem.getAttribute(key);\n      }\n\n      if (nameIndex === 1) {\n        return elem[key];\n      }\n\n      return window.getComputedStyle(elem, null).getPropertyValue(key);\n    }\n\n    $.fn[name] = function (key, value) {\n      var argLength = arguments.length;\n\n      if (argLength === 1 && isString(key)) {\n        // 获取值\n        return get(this[0], key);\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        if (argLength === 2) {\n          set(elem, key, value);\n        } else {\n          each(key, function (k, v) {\n            set(elem, k, v);\n          });\n        }\n      });\n    };\n  });\n\n  /**\n   * 插入到指定元素前面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  $.fn.before = function (selector) {\n    $(selector).insertBefore(this);\n    return this;\n  };\n\n  /**\n   * 找到直接子元素的元素集合\n   * @param selector {String=}\n   * @returns {JQ}\n   */\n  $.fn.children = function (selector) {\n    var children = [];\n\n    this.each(function (_, _this) {\n      each(_this.childNodes, function (__, childNode) {\n        if (childNode.nodeType !== 1) {\n          return;\n        }\n\n        if (!selector || (selector && $(childNode).is(selector))) {\n          children.push(childNode);\n        }\n      });\n    });\n\n    return new JQ(unique(children));\n  };\n\n  /**\n   * 遍历数组或对象，通过函数返回一个新的数组或对象，null 和 undefined 将被过滤掉。\n   * @param elements\n   * @param callback\n   * @returns {Array}\n   */\n  function map(elements, callback) {\n    var ref;\n\n    var value;\n    var ret = [];\n\n    each(elements, function (i, element) {\n      value = callback(element, i);\n\n      if (value !== null && value !== undefined) {\n        ret.push(value);\n      }\n    });\n\n    return (ref = []).concat.apply(ref, ret);\n  }\n\n  /**\n   * 通过遍历集合中的节点对象，通过函数返回一个新的对象，null 或 undefined 将被过滤掉。\n   */\n  $.fn.map = function (callback) {\n    return new JQ(map(this, function (el, i) { return callback.call(el, i, el); }));\n  };\n\n  /**\n   * 通过深度克隆来复制集合中的所有元素。\n   * (通过原生 cloneNode 方法深度克隆来复制集合中的所有元素。此方法不会有数据和事件处理程序复制到新的元素。这点和jquery中利用一个参数来确定是否复制数据和事件处理不相同。)\n   * @returns {JQ}\n   */\n  $.fn.clone = function () {\n    return this.map(function () {\n      return this.cloneNode(true);\n    });\n  };\n\n  /**\n   * 根据选择器、DOM元素或 JQ 对象来检测匹配元素集合，\n   * 如果其中至少有一个元素符合这个给定的表达式就返回true\n   * @param selector {String|Node|NodeList|Array|JQ|Window}\n   * @returns boolean\n   */\n  $.fn.is = function (selector) {\n    var self = this[0];\n\n    if (!self || selector === undefined || selector === null) {\n      return false;\n    }\n\n    if (isString(selector)) {\n      if (self === document || self === window) {\n        return false;\n      }\n\n      var matchesSelector = self.matches\n        || self.matchesSelector\n        || self.webkitMatchesSelector\n        || self.mozMatchesSelector\n        || self.oMatchesSelector\n        || self.msMatchesSelector;\n\n      return matchesSelector.call(self, selector);\n    }\n\n    if (selector === document || selector === window) {\n      return self === selector;\n    }\n\n    if (selector.nodeType || isArrayLike(selector)) {\n      var $compareWith = selector.nodeType ? [selector] : selector;\n\n      for (var i = 0; i < $compareWith.length; i += 1) {\n        if ($compareWith[i] === self) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return false;\n  };\n\n  function dir(nodes, selector, nameIndex, node) {\n    var ret = [];\n    var elem;\n\n    nodes.each(function (j, _this) {\n      elem = _this[node];\n      while (elem) {\n        if (nameIndex === 2) {\n          // prevUntil\n          if (!selector || (selector && $(elem).is(selector))) {\n            break;\n          }\n\n          ret.push(elem);\n        } else if (nameIndex === 0) {\n          // prev\n          if (!selector || (selector && $(elem).is(selector))) {\n            ret.push(elem);\n          }\n\n          break;\n        } else if (!selector || (selector && $(elem).is(selector))) {\n          // prevAll\n          ret.push(elem);\n        }\n\n        elem = elem[node];\n      }\n    });\n\n    return new JQ(unique(ret));\n  }\n\n  /**\n   * parent - 取得匹配的直接父元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * parents - 取得所有匹配的父元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * parentUntil - 取得所有的父元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 's', 'sUntil'], function (nameIndex, name) {\n    $.fn[(\"parent\" + name)] = function (selector) {\n      // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n      var $nodes = nameIndex === 0 ? this : $(this.get().reverse());\n\n      return dir($nodes, selector, nameIndex, 'parentNode');\n    };\n  });\n\n  /**\n   * array 中提取的方法。从 start 开始，如果 end 指出。提取不包含 end 位置的元素。\n   */\n  $.fn.slice = function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return new JQ([].slice.apply(this, args));\n  };\n\n  /**\n   * 获取当前对象中第n个元素\n   * @param index {Number}\n   * @returns {JQ}\n   */\n  $.fn.eq = function (index) {\n    var ret = index === -1\n      ? this.slice(index)\n      : this.slice(index, +index + 1);\n\n    return new JQ(ret);\n  };\n\n  /**\n   * 返回首先匹配到的父节点，包含父节点\n   * @param selector {String}\n   * @returns {JQ}\n   */\n  $.fn.closest = function (selector) {\n    var self = this;\n\n    if (!self.is(selector)) {\n      self = self.parents(selector).eq(0);\n    }\n\n    return self;\n  };\n\n  var dataNS = 'mduiElementDataStorage';\n\n  /**\n   * 在指定元素上存储数据，或从指定元素上读取数据\n   * @param elem 必须， DOM 元素\n   * @param key 必须，键名\n   * @param value 可选，值\n   */\n  function data(elem, key, value) {\n    var storage = {};\n\n    if (value !== undefined) {\n      // 根据 key、value 设置值\n      storage[key] = value;\n    } else if (isObjectLike(key)) {\n      // 根据键值对设置值\n      storage = key;\n    } else if (key === undefined) {\n      // 获取所有值\n      var result = {};\n\n      each(elem.attributes, function (i, attribute) {\n        var name = attribute.name;\n\n        if (name.indexOf('data-') === 0) {\n          var prop = name.slice(5).replace(/-./g, function (u) { return u.charAt(1).toUpperCase(); });\n\n          result[prop] = attribute.value;\n        }\n      });\n\n      if (elem[dataNS]) {\n        each(elem[dataNS], function (k, v) {\n          result[k] = v;\n        });\n      }\n\n      return result;\n    } else if (elem[dataNS] && (key in elem[dataNS])) {\n      // 获取指定值\n      return elem[dataNS][key];\n    } else {\n      // 从 data- 中获取指定值\n      var dataKey = elem.getAttribute((\"data-\" + key));\n\n      if (dataKey) {\n        return dataKey;\n      }\n\n      return undefined;\n    }\n\n    // 设置值\n    if (!elem[dataNS]) {\n      elem[dataNS] = {};\n    }\n\n    each(storage, function (k, v) {\n      elem[dataNS][k] = v;\n    });\n\n    return undefined;\n  }\n\n  /**\n   * 在元素上读取或设置数据\n   * @param key 必须\n   * @param value\n   * @returns {*}\n   */\n  $.fn.data = function (key, value) {\n    if (value === undefined) {\n      if (isObjectLike(key)) {\n        // 同时设置多个值\n        return this.each(function (i, elem) {\n          data(elem, key);\n        });\n      }\n\n      if (this[0]) {\n        // 获取值\n        return data(this[0], key);\n      }\n\n      return undefined;\n    }\n\n    // 设置值\n    return this.each(function (i, elem) {\n      data(elem, key, value);\n    });\n  };\n\n  /**\n   * 删除子节点\n   * @returns {JQ}\n   */\n  $.fn.empty = function () {\n    return this.each(function () {\n      this.innerHTML = '';\n    });\n  };\n\n  /**\n   * 筛选元素集合\n   * @param selector {String|JQ|Node|Function}\n   * @returns {JQ}\n   */\n  $.fn.filter = function (selector) {\n    if (isFunction(selector)) {\n      return this.map(function (index, ele) { return (selector.call(ele, index, ele) ? ele : undefined); });\n    }\n\n    var $selector = $(selector);\n\n    return this.map(function (index, ele) { return ($selector.index(ele) > -1 ? ele : undefined); });\n  };\n\n  /**\n   * 根据 CSS 选择器找到后代节点的集合\n   * @param selector {String}\n   * @returns {JQ}\n   */\n  $.fn.find = function (selector) {\n    var foundElements = [];\n\n    this.each(function (i, _this) {\n      var nodeType = _this.nodeType;\n\n      if (nodeType !== 1 && nodeType !== 9) {\n        // 不是 element 和 document 则跳过\n        return;\n      }\n\n      merge(foundElements, _this.querySelectorAll(selector));\n    });\n\n    return new JQ(foundElements);\n  };\n\n  /**\n   * 获取对象中第一个元素\n   * @returns {JQ}\n   */\n  $.fn.first = function () {\n    return this.eq(0);\n  };\n\n  /**\n   * 一个 DOM 节点是否包含另一个 DOM 节点\n   * @param parent {Node} 父节点\n   * @param node {Node} 子节点\n   * @returns {Boolean}\n   */\n  function contains(parent, node) {\n    if (parent && !node) {\n      return document.documentElement.contains(parent);\n    }\n\n    return parent !== node && parent.contains(node);\n  }\n\n  /**\n   * 保留含有指定子元素的元素，去掉不含有指定子元素的元素\n   * @param selector {String|Node|JQ|NodeList|Array}\n   * @return {JQ}\n   */\n  $.fn.has = function (selector) {\n    var $targets = isString(selector) ? this.find(selector) : $(selector);\n    var length = $targets.length;\n\n    return this.filter(function () {\n      for (var i = 0; i < length; i += 1) {\n        if (contains(this, $targets[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n\n  /**\n   * 是否含有指定的 CSS 类\n   * @param className {String}\n   * @returns {boolean}\n   */\n  $.fn.hasClass = function (className) {\n    if (!this[0] || !className) {\n      return false;\n    }\n\n    return this[0].classList.contains(className);\n  };\n\n  /**\n   * width - 获取元素的宽度\n   * @return {Number}\n   */\n  /**\n   * height - 获取元素的高度\n   * @return {Number}\n   */\n  each({\n    Width: 'width',\n    Height: 'height',\n  }, function (prop, name) {\n    $.fn[name] = function (val) {\n      if (val === undefined) {\n        // 获取\n        var elem = this[0];\n\n        if (isWindow(elem)) {\n          return elem[(\"inner\" + prop)];\n        }\n\n        if (isDocument(elem)) {\n          return elem.documentElement[(\"scroll\" + prop)];\n        }\n\n        var $elem = $(elem);\n\n        // IE10、IE11 在 box-sizing:border-box 时，不会包含 padding 和 border，这里进行修复\n        var IEFixValue = 0;\n        var isWidth = name === 'width';\n        if ('ActiveXObject' in window) { // 判断是 IE 浏览器\n          if ($elem.css('box-sizing') === 'border-box') {\n            IEFixValue = parseFloat($elem.css((\"padding-\" + (isWidth ? 'left' : 'top'))))\n              + parseFloat($elem.css((\"padding-\" + ((isWidth ? 'right' : 'bottom')))))\n              + parseFloat($elem.css((\"border-\" + (isWidth ? 'left' : 'top') + \"-width\")))\n              + parseFloat($elem.css((\"border-\" + (isWidth ? 'right' : 'bottom') + \"-width\")));\n          }\n        }\n\n        return parseFloat($(elem).css(name)) + IEFixValue;\n      }\n\n      // 设置\n      /* eslint no-restricted-globals: 0 */\n      if (!isNaN(Number(val)) && val !== '') {\n        val += 'px';\n      }\n\n      return this.css(name, val);\n    };\n  });\n\n  /**\n   * 隐藏指定元素\n   * @returns {JQ}\n   */\n  $.fn.hide = function () {\n    return this.each(function () {\n      this.style.display = 'none';\n    });\n  };\n\n  /**\n   * val - 获取或设置元素的值\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  /**\n   * html - 获取或设置元素的 HTML\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  /**\n   * text - 获取或设置元素的内容\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  each(['val', 'html', 'text'], function (nameIndex, name) {\n    var props = {\n      0: 'value',\n      1: 'innerHTML',\n      2: 'textContent',\n    };\n\n    var defaults = {\n      0: undefined,\n      1: undefined,\n      2: null,\n    };\n\n    $.fn[name] = function (value) {\n      if (value === undefined) {\n        // 获取值\n        return this[0] ? this[0][props[nameIndex]] : defaults[nameIndex];\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        elem[props[nameIndex]] = value;\n      });\n    };\n  });\n\n  /**\n   * 获取一个元素的位置。\n   * 当 elem 参数没有给出时，返回当前元素在兄弟节点中的位置。\n   * 有给出了 elem 参数时，返回 elem 元素在当前对象中的位置\n   * @param elem {selector|Node=}\n   * @returns {Number}\n   */\n  $.fn.index = function (elem) {\n    if (!elem) {\n      // 获取当前 JQ 对象的第一个元素在同辈元素中的位置\n      return this\n        .eq(0)\n        .parent()\n        .children()\n        .get()\n        .indexOf(this[0]);\n    }\n\n    if (isString(elem)) {\n      // 返回当前 JQ 对象的第一个元素在指定选择器对应的元素中的位置\n      return $(elem)\n        .eq(0)\n        .parent()\n        .children()\n        .get()\n        .indexOf(this[0]);\n    }\n\n    // 返回指定元素在当前 JQ 对象中的位置\n    return this\n      .get()\n      .indexOf(elem);\n  };\n\n  /**\n   * innerWidth - 获取元素的宽度，包含内边距\n   * @return {Number}\n   */\n  /**\n   * innerHeight - 获取元素的高度，包含内边距\n   * @return {Number}\n   */\n  each({\n    Width: 'width',\n    Height: 'height',\n  }, function (prop, name) {\n    $.fn[(\"inner\" + prop)] = function () {\n      var value = this[name]();\n      var $elem = $(this[0]);\n\n      if ($elem.css('box-sizing') !== 'border-box') {\n        value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'left' : 'top'))));\n        value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'right' : 'bottom'))));\n      }\n\n      return value;\n    };\n  });\n\n  /**\n   * 获取对象中最后一个元素\n   * @returns {JQ}\n   */\n  $.fn.last = function () {\n    return this.eq(-1);\n  };\n\n  /**\n   * next - 取得后一个匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * nextAll - 取得后面所有匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * nextUntil - 取得后面所有匹配的元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 'All', 'Until'], function (nameIndex, name) {\n    $.fn[(\"next\" + name)] = function (selector) {\n      return dir(this, selector, nameIndex, 'nextElementSibling');\n    };\n  });\n\n  /**\n   * 从元素集合中删除指定的元素\n   * @param selector {String|Node|JQ|Function}\n   * @return {JQ}\n   */\n  $.fn.not = function (selector) {\n    var $excludes = this.filter(selector);\n\n    return this.map(function (index, ele) { return ($excludes.index(ele) > -1 ? undefined : ele); });\n  };\n\n  /**\n   * 获取元素相对于 document 的偏移\n   * @returns {Object}\n   */\n  $.fn.offset = function () {\n    if (this[0]) {\n      var offset = this[0].getBoundingClientRect();\n\n      return {\n        left: offset.left + window.pageXOffset,\n        top: offset.top + window.pageYOffset,\n        width: offset.width,\n        height: offset.height,\n      };\n    }\n\n    return null;\n  };\n\n  /**\n   * 返回最近的用于定位的父元素\n   * @returns {*|JQ}\n   */\n  $.fn.offsetParent = function () {\n    return this.map(function () {\n      var parent = this.offsetParent;\n\n      while (parent && $(parent).css('position') === 'static') {\n        parent = parent.offsetParent;\n      }\n\n      return parent || document.documentElement;\n    });\n  };\n\n  /**\n   * 绑定事件，只触发一次\n   * @param eventName\n   * @param selector\n   * @param data\n   * @param callback\n   */\n  $.fn.one = function (eventName, selector, data, callback) {\n    var self = this;\n\n    if (!isString(eventName)) {\n      each(eventName, function (type, fn) {\n        type.split(' ').forEach(function (eName) {\n          self.on(eName, selector, data, fn, 1);\n        });\n      });\n    } else {\n      eventName.split(' ').forEach(function (eName) {\n        self.on(eName, selector, data, callback, 1);\n      });\n    }\n\n    return this;\n  };\n\n  /**\n   * 获取元素相对于父元素的偏移\n   * @return {Object}\n   */\n  $.fn.position = function () {\n    var self = this;\n\n    if (!self[0]) {\n      return null;\n    }\n\n    var offsetParent;\n    var offset;\n    var parentOffset = {\n      top: 0,\n      left: 0,\n    };\n\n    if (self.css('position') === 'fixed') {\n      offset = self[0].getBoundingClientRect();\n    } else {\n      offsetParent = self.offsetParent();\n      offset = self.offset();\n      if (!isNodeName(offsetParent[0], 'html')) {\n        parentOffset = offsetParent.offset();\n      }\n\n      parentOffset = {\n        top: parentOffset.top + offsetParent.css('borderTopWidth'),\n        left: parentOffset.left + offsetParent.css('borderLeftWidth'),\n      };\n    }\n\n    return {\n      top: offset.top - parentOffset.top - self.css('marginTop'),\n      left: offset.left - parentOffset.left - self.css('marginLeft'),\n      width: offset.width,\n      height: offset.height,\n    };\n  };\n\n  /**\n   * 前置到指定元素内部\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  $.fn.prependTo = function (selector) {\n    $(selector).prepend(this);\n    return this;\n  };\n\n  /**\n   * prev - 取得前一个匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * prevAll - 取得前面所有匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * prevUntil - 取得前面的所有元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 'All', 'Until'], function (nameIndex, name) {\n    $.fn[(\"prev\" + name)] = function (selector) {\n      // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n      var $nodes = nameIndex === 0 ? this : $(this.get().reverse());\n\n      return dir($nodes, selector, nameIndex, 'previousElementSibling');\n    };\n  });\n\n  /**\n   * 删除所有匹配的元素\n   * @returns {JQ}\n   */\n  $.fn.remove = function () {\n    return this.each(function (i, _this) {\n      if (_this.parentNode) {\n        _this.parentNode.removeChild(_this);\n      }\n    });\n  };\n\n  /**\n   * 移除指定属性\n   * @param attr {String}\n   * @returns {JQ}\n   */\n  $.fn.removeAttr = function (attr) {\n    return this.each(function () {\n      this.removeAttribute(attr);\n    });\n  };\n\n  /**\n   * 移除指定元素上存放的数据\n   * @param elem 必须，DOM 元素\n   * @param key 必须，键名\n   */\n  function removeData(elem, key) {\n    if (elem[dataNS] && elem[dataNS][key]) {\n      elem[dataNS][key] = null;\n      delete elem[dataNS][key];\n    }\n  }\n\n  /**\n   * 移除元素上存储的数据\n   * @param key 必须\n   * @returns {*}\n   */\n  $.fn.removeData = function (key) {\n    return this.each(function (i, elem) {\n      removeData(elem, key);\n    });\n  };\n\n  /**\n   * 删除属性值\n   * @param name {String}\n   * @returns {JQ}\n   */\n  $.fn.removeProp = function (name) {\n    return this.each(function () {\n      try {\n        delete this[name];\n      } catch (e) {\n        // empty\n      }\n    });\n  };\n\n  /**\n   * 用新元素替换当前元素\n   * @param newContent {String|Node|NodeList|JQ}\n   * @returns {JQ}\n   */\n  $.fn.replaceWith = function (newContent) {\n    return this.before(newContent).remove();\n  };\n\n  /**\n   * replaceAll - 替换掉指定元素\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  $.fn.replaceAll = function (selector) {\n    $(selector).replaceWith(this);\n    return this;\n  };\n\n  /**\n   * 将表单元素的值组合成键值对数组\n   * @returns {Array}\n   */\n  $.fn.serializeArray = function () {\n    var result = [];\n    var elem = this[0];\n\n    if (!elem || !elem.elements) {\n      return result;\n    }\n\n    $([].slice.call(elem.elements)).each(function () {\n      var $elem = $(this);\n      var type = $elem.attr('type');\n      if (\n        this.nodeName.toLowerCase() !== 'fieldset'\n        && !this.disabled\n        && ['submit', 'reset', 'button'].indexOf(type) === -1\n        && (['radio', 'checkbox'].indexOf(type) === -1 || this.checked)\n      ) {\n        result.push({\n          name: $elem.attr('name'),\n          value: $elem.val(),\n        });\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * 将表单元素或对象序列化\n   * @returns {String}\n   */\n  $.fn.serialize = function () {\n    var result = [];\n\n    each(this.serializeArray(), function (i, elem) {\n      result.push(((encodeURIComponent(elem.name)) + \"=\" + (encodeURIComponent(elem.value))));\n    });\n\n    return result.join('&');\n  };\n\n  var elementDisplay = {};\n\n  /**\n   * 获取元素的默认 display 样式值，用于 .show() 方法\n   * @param nodeName\n   * @returns {*}\n   */\n  function defaultDisplay(nodeName) {\n    var element;\n    var display;\n\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName);\n      document.body.appendChild(element);\n      display = getComputedStyle(element, '').getPropertyValue('display');\n      element.parentNode.removeChild(element);\n      if (display === 'none') {\n        display = 'block';\n      }\n\n      elementDisplay[nodeName] = display;\n    }\n\n    return elementDisplay[nodeName];\n  }\n\n  /**\n   * 显示指定元素\n   * @returns {JQ}\n   */\n  $.fn.show = function () {\n    return this.each(function () {\n      if (this.style.display === 'none') {\n        this.style.display = '';\n      }\n\n      if (window.getComputedStyle(this, '').getPropertyValue('display') === 'none') {\n        this.style.display = defaultDisplay(this.nodeName);\n      }\n    });\n  };\n\n  /**\n   * 取得同辈元素的集合\n   * @param selector {String=}\n   * @returns {JQ}\n   */\n  $.fn.siblings = function (selector) {\n    return this.prevAll(selector).add(this.nextAll(selector));\n  };\n\n  /**\n   * 切换元素的显示状态\n   * @returns {JQ}\n   */\n  $.fn.toggle = function () {\n    return this.each(function () {\n      this.style.display = this.style.display === 'none' ? '' : 'none';\n    });\n  };\n\n  // import 'mdn-polyfills/MouseEvent';\n\n  /**\n   * 触发一个事件\n   * @param eventName\n   * @param data\n   * @returns {*|JQ}\n   */\n  $.fn.trigger = function (eventName, data) {\n    var isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(eventName) > -1;\n    var evt;\n\n    if (isMouseEvent) {\n      // Note: MouseEvent 无法传入 detail 参数\n      evt = new MouseEvent(eventName, {\n        bubbles: true,\n        cancelable: true,\n      });\n    } else {\n      evt = new CustomEvent(eventName, {\n        detail: data,\n        bubbles: true,\n        cancelable: true,\n      });\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    evt._detail = data;\n\n    return this.each(function () {\n      this.dispatchEvent(evt);\n    });\n  };\n\n  /**\n   * 将数组或对象序列化\n   * @param obj\n   * @returns {String}\n   */\n  function param(obj) {\n    if (!isObjectLike(obj)) {\n      return '';\n    }\n\n    var args = [];\n\n    function destructure(key, value) {\n      var keyTmp;\n\n      if (isObjectLike(value)) {\n        each(value, function (i, v) {\n          if (Array.isArray(value) && !isObjectLike(v)) {\n            keyTmp = '';\n          } else {\n            keyTmp = i;\n          }\n\n          destructure((key + \"[\" + keyTmp + \"]\"), v);\n        });\n      } else {\n        if (value !== null && value !== '') {\n          keyTmp = \"=\" + (encodeURIComponent(value));\n        } else {\n          keyTmp = '';\n        }\n\n        args.push(encodeURIComponent(key) + keyTmp);\n      }\n    }\n\n    each(obj, destructure);\n\n    return args.join('&');\n  }\n\n  var jsonpID = 0;\n\n  /**\n   * 判断此请求方法是否通过查询字符串提交参数\n   * @param method 请求方法，大写\n   * @returns {boolean}\n   */\n  function isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n  }\n\n  /**\n   * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n   * @param url\n   * @param query 参数 key=value\n   * @returns {string}\n   */\n  function appendQuery(url, query) {\n    return ((url + \"&\" + query)).replace(/[&?]{1,2}/, '?');\n  }\n\n  /**\n   * 发送 ajax 请求\n   * @param options\n   */\n  function ajax(options) {\n  // 配置参数\n    var defaults = {\n      // 请求方式\n      method: 'GET',\n      // 请求的数据，查询字符串或对象\n      data: false,\n      // 是否把数据转换为查询字符串发送，为 false 时不进行自动转换。\n      processData: true,\n      // 是否为异步请求\n      async: true,\n      // 是否从缓存中读取，只对 GET/HEAD 请求有效，dataType 为 jsonp 时为 false\n      cache: true,\n      // HTTP 访问认证的用户名\n      username: '',\n      // HTTP 访问认证的密码\n      password: '',\n      // 一个键值对，随着请求一起发送\n      headers: {},\n      // 设置 XHR 对象\n      xhrFields: {},\n      // 一个 HTTP 代码和函数的对象\n      statusCode: {},\n      // 预期服务器返回的数据类型 text、json、jsonp\n      dataType: 'text',\n      // jsonp 请求的回调函数名称\n      jsonp: 'callback',\n      // （string 或 Function）使用指定的回调函数名代替自动生成的回调函数名\n      jsonpCallback: function () {\n        jsonpID += 1;\n\n        return (\"mduijsonp_\" + (Date.now()) + \"_\" + jsonpID);\n      },\n      // 发送信息至服务器时内容编码类型\n      contentType: 'application/x-www-form-urlencoded',\n      // 设置请求超时时间（毫秒）\n      timeout: 0,\n      // 是否在 document 上触发全局 ajax 事件\n      global: true,\n      // beforeSend:    function (XMLHttpRequest) 请求发送前执行，返回 false 可取消本次 ajax 请求\n      // success:       function (data, textStatus, XMLHttpRequest) 请求成功时调用\n      // error:         function (XMLHttpRequest, textStatus) 请求失败时调用\n      // statusCode:    {404: function ()}\n      //                200-299之间的状态码表示成功，参数和 success 回调一样；其他状态码表示失败，参数和 error 回调一样\n      // complete:      function (XMLHttpRequest, textStatus) 请求完成后回调函数 (请求成功或失败之后均调用)\n    };\n\n    // 回调函数\n    var callbacks = [\n      'beforeSend',\n      'success',\n      'error',\n      'statusCode',\n      'complete' ];\n\n    // 是否已取消请求\n    var isCanceled = false;\n\n    // 保存全局配置\n    var globals = globalOptions;\n\n    // 事件参数\n    var eventParams = {};\n\n    // 合并全局参数到默认参数，全局回调函数不覆盖\n    each(globals, function (key, value) {\n      if (callbacks.indexOf(key) < 0) {\n        defaults[key] = value;\n      }\n    });\n\n    // 参数合并\n    options = $.extend({}, defaults, options);\n\n    /**\n     * 触发全局事件\n     * @param event string 事件名\n     * @param xhr XMLHttpRequest 事件参数\n     */\n    function triggerEvent(event, xhr) {\n      if (options.global) {\n        $(document).trigger(event, xhr);\n      }\n    }\n\n    /**\n     * 触发 XHR 回调和事件\n     * @param callback string 回调函数名称\n     * @param args\n     */\n    function triggerCallback(callback) {\n      var args = [], len = arguments.length - 1;\n      while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n      var result1;\n      var result2;\n\n      if (callback) {\n        // 全局回调\n        if (callback in globals) {\n          result1 = globals[callback].apply(globals, args);\n        }\n\n        // 自定义回调\n        if (options[callback]) {\n          result2 = options[callback].apply(options, args);\n        }\n\n        // beforeSend 回调返回 false 时取消 ajax 请求\n        if (callback === 'beforeSend' && (result1 === false || result2 === false)) {\n          isCanceled = true;\n        }\n      }\n    }\n\n    // 请求方式转为大写\n    var method = options.method.toUpperCase();\n\n    // 默认使用当前页面 URL\n    if (!options.url) {\n      options.url = window.location.toString();\n    }\n\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    var sendData;\n    if (\n      (isQueryStringData(method) || options.processData)\n      && options.data\n      && [ArrayBuffer, Blob, Document, FormData].indexOf(options.data.constructor) < 0\n    ) {\n      sendData = isString(options.data) ? options.data : param(options.data);\n    } else {\n      sendData = options.data;\n    }\n\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (isQueryStringData(method) && sendData) {\n      // 查询字符串拼接到 URL 中\n      options.url = appendQuery(options.url, sendData);\n      sendData = null;\n    }\n\n    // JSONP\n    if (options.dataType === 'jsonp') {\n      // URL 中添加自动生成的回调函数名\n      var callbackName = isFunction(options.jsonpCallback)\n        ? options.jsonpCallback()\n        : options.jsonpCallback;\n      var requestUrl = appendQuery(options.url, ((options.jsonp) + \"=\" + callbackName));\n\n      eventParams.options = options;\n\n      triggerEvent(ajaxEvents.ajaxStart, eventParams);\n      triggerCallback('beforeSend', null);\n\n      if (isCanceled) {\n        return undefined;\n      }\n\n      var abortTimeout;\n\n      // 创建 script\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n\n      // 创建 script 失败\n      script.onerror = function () {\n        if (abortTimeout) {\n          clearTimeout(abortTimeout);\n        }\n\n        triggerEvent(ajaxEvents.ajaxError, eventParams);\n        triggerCallback('error', null, 'scripterror');\n\n        triggerEvent(ajaxEvents.ajaxComplete, eventParams);\n        triggerCallback('complete', null, 'scripterror');\n      };\n\n      script.src = requestUrl;\n\n      // 处理\n      window[callbackName] = function (data) {\n        if (abortTimeout) {\n          clearTimeout(abortTimeout);\n        }\n\n        eventParams.data = data;\n\n        triggerEvent(ajaxEvents.ajaxSuccess, eventParams);\n        triggerCallback('success', data, 'success', null);\n\n        $(script).remove();\n        script = null;\n        delete window[callbackName];\n      };\n\n      $('head').append(script);\n\n      if (options.timeout > 0) {\n        abortTimeout = setTimeout(function () {\n          $(script).remove();\n          script = null;\n\n          triggerEvent(ajaxEvents.ajaxError, eventParams);\n          triggerCallback('error', null, 'timeout');\n        }, options.timeout);\n      }\n\n      return undefined;\n    }\n\n    // GET/HEAD 请求的缓存处理\n    if (isQueryStringData(method) && !options.cache) {\n      options.url = appendQuery(options.url, (\"_=\" + (Date.now())));\n    }\n\n    // 创建 XHR\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(method, options.url, options.async, options.username, options.password);\n\n    if (\n      options.contentType\n      || (\n        sendData\n        && !isQueryStringData(method)\n        && options.contentType !== false\n      )\n    ) {\n      xhr.setRequestHeader('Content-Type', options.contentType);\n    }\n\n    // 设置 Accept\n    if (options.dataType === 'json') {\n      xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n    }\n\n    // 添加 headers\n    if (options.headers) {\n      each(options.headers, function (key, value) {\n        xhr.setRequestHeader(key, value);\n      });\n    }\n\n    // 检查是否是跨域请求\n    if (options.crossDomain === undefined) {\n      options.crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(options.url)\n        && RegExp.$2 !== window.location.host;\n    }\n\n    if (!options.crossDomain) {\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    }\n\n    if (options.xhrFields) {\n      each(options.xhrFields, function (key, value) {\n        xhr[key] = value;\n      });\n    }\n\n    eventParams.xhr = xhr;\n    eventParams.options = options;\n\n    var xhrTimeout;\n\n    xhr.onload = function () {\n      if (xhrTimeout) {\n        clearTimeout(xhrTimeout);\n      }\n\n      // 包含成功或错误代码的字符串\n      var textStatus;\n\n      // AJAX 返回的 HTTP 响应码是否表示成功\n      var isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 0;\n\n      var responseData;\n\n      if (isHttpStatusSuccess) {\n        if (xhr.status === 204 || method === 'HEAD') {\n          textStatus = 'nocontent';\n        } else if (xhr.status === 304) {\n          textStatus = 'notmodified';\n        } else {\n          textStatus = 'success';\n        }\n\n        if (options.dataType === 'json') {\n          try {\n            responseData = JSON.parse(xhr.responseText);\n            eventParams.data = responseData;\n          } catch (err) {\n            textStatus = 'parsererror';\n\n            triggerEvent(ajaxEvents.ajaxError, eventParams);\n            triggerCallback('error', xhr, textStatus);\n          }\n\n          if (textStatus !== 'parsererror') {\n            triggerEvent(ajaxEvents.ajaxSuccess, eventParams);\n            triggerCallback('success', responseData, textStatus, xhr);\n          }\n        } else {\n          responseData = xhr.responseType === 'text' || xhr.responseType === ''\n            ? xhr.responseText\n            : xhr.response;\n          eventParams.data = responseData;\n\n          triggerEvent(ajaxEvents.ajaxSuccess, eventParams);\n          triggerCallback('success', responseData, textStatus, xhr);\n        }\n      } else {\n        textStatus = 'error';\n\n        triggerEvent(ajaxEvents.ajaxError, eventParams);\n        triggerCallback('error', xhr, textStatus);\n      }\n\n      // statusCode\n      each([globals.statusCode, options.statusCode], function (i, func) {\n        if (func && func[xhr.status]) {\n          if (isHttpStatusSuccess) {\n            func[xhr.status](responseData, textStatus, xhr);\n          } else {\n            func[xhr.status](xhr, textStatus);\n          }\n        }\n      });\n\n      triggerEvent(ajaxEvents.ajaxComplete, eventParams);\n      triggerCallback('complete', xhr, textStatus);\n    };\n\n    xhr.onerror = function () {\n      if (xhrTimeout) {\n        clearTimeout(xhrTimeout);\n      }\n\n      triggerEvent(ajaxEvents.ajaxError, eventParams);\n      triggerCallback('error', xhr, xhr.statusText);\n\n      triggerEvent(ajaxEvents.ajaxComplete, eventParams);\n      triggerCallback('complete', xhr, 'error');\n    };\n\n    xhr.onabort = function () {\n      var textStatus = 'abort';\n\n      if (xhrTimeout) {\n        textStatus = 'timeout';\n        clearTimeout(xhrTimeout);\n      }\n\n      triggerEvent(ajaxEvents.ajaxError, eventParams);\n      triggerCallback('error', xhr, textStatus);\n\n      triggerEvent(ajaxEvents.ajaxComplete, eventParams);\n      triggerCallback('complete', xhr, textStatus);\n    };\n\n    // ajax start 回调\n    triggerEvent(ajaxEvents.ajaxStart, eventParams);\n    triggerCallback('beforeSend', xhr);\n\n    if (isCanceled) {\n      return xhr;\n    }\n\n    // Timeout\n    if (options.timeout > 0) {\n      xhrTimeout = setTimeout(function () {\n        xhr.abort();\n      }, options.timeout);\n    }\n\n    // 发送 XHR\n    xhr.send(sendData);\n\n    return xhr;\n  }\n\n  /**\n   * 为 ajax 请求设置全局配置参数\n   * @param options\n   */\n  function ajaxSetup(options) {\n    $.extend(globalOptions, options || {});\n  }\n\n  $.extend({\n    ajax: ajax,\n    ajaxSetup: ajaxSetup,\n    contains: contains,\n    data: data,\n    each: each,\n    map: map,\n    merge: merge,\n    param: param,\n    removeData: removeData,\n    unique: unique,\n  });\n\n  return $;\n\n}));\n"]}