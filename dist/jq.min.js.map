{"version":3,"sources":["jq.js"],"names":["global","factory","exports","module","define","amd","JQ","this","arr","i","length","$","selector","html","trim","toCreate","indexOf","tempParent","document","createElement","innerHTML","childNodes","push","elems","match","querySelectorAll","getElementById","slice","i$1","ready","nodeType","window","i$2","extend","this$1","args","len","arguments","Object","keys","forEach","prop","target","shift","loop","isObjectLike","obj","isFunction","fn","isString","isArrayLike","each","callback","call","map","ref","value","ret","elem","concat","apply","merge","first","second","val","unique","result","prototype","elementDisplay","dir","nodes","nameIndex","node","j","_this","is","contains","parent","documentElement","param","key","destructure","keyTmp","v","Array","isArray","encodeURIComponent","join","el","get","index","undefined","filter","ele","$selector","not","$excludes","offset","getBoundingClientRect","left","pageXOffset","top","pageYOffset","width","height","offsetParent","css","position","self","name","parentOffset","nodeName","toLowerCase","show","element","display","style","getComputedStyle","getPropertyValue","body","appendChild","parentNode","removeChild","hide","toggle","hasClass","className","classList","removeAttr","attr","removeAttribute","removeProp","e","eq","last","children","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","$compareWith","find","foundElements","_","__","childNode","has","$targets","siblings","prevAll","add","nextAll","closest","parents","remove","empty","clone","cloneNode","replaceWith","newContent","before","serializeArray","elements","$elem","type","disabled","checked","serialize","props","0","1","2","defaults","set","setAttribute","argLength","getAttribute","k","classes","split","cls","Width","Height","isNaN","Number","doc","win","DOCUMENT_NODE","IEFixValue","isWidth","parseFloat","reverse","newChild","newChilds","copyByClone","tempDiv","child","insertBefore","nextSibling","appendTo","prependTo","after","replaceAll","original","dataNS","data","attributes","attribute","replace","u","charAt","toUpperCase","dataKey","removeData","t","bubbles","cancelable","n","createEvent","initMouseEvent","Event","MouseEvent","detail","initCustomEvent","CustomEvent","handlers","mduiElementId","fnFalse","getElementId","eventName","func","event","handler","toString","sel","removeEventListener","proxy","test","readyState","addEventListener","on","one","origCallback","off","elementId","useCapture","callFn","_detail","preventDefault","stopPropagation","proxyfn","_data","eName","trigger","evt","isMouseEvent","dispatchEvent","globalOptions","jsonpID","ajaxEvent","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","ajaxSetup","options","ajax","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","jsonp","jsonpCallback","Date","now","contentType","timeout","callbacks","isCanceled","globals","eventParams","triggerEvent","xhr","triggerCallback","result1","result2","sendData","location","ArrayBuffer","Blob","Document","FormData","constructor","abortTimeout","callbackName","requestUrl","script","onerror","clearTimeout","src","append","setTimeout","xhrTimeout","XMLHttpRequest","open","setRequestHeader","crossDomain","RegExp","$2","host","onload","textStatus","responseData","isHttpStatusSuccess","status","JSON","parse","responseText","err","responseType","response","statusText","onabort","abort","send","params"],"mappings":"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","file":"jq.min.js","sourcesContent":["/**\n * JQ 1.0.0 (https://github.com/zdhxiong/mdui.JQ#readme)\n * Copyright 2018-2018 zdhxiong\n * Licensed under MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.JQ = factory());\n}(this, (function () { 'use strict';\n\n  var JQ = function JQ(arr) {\n    var self = this;\n\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n\n    self.length = arr.length;\n\n    return this;\n  };\n\n  function $(selector) {\n    var arr = [];\n\n    if (!selector) {\n      return new JQ(arr);\n    }\n\n    if (selector instanceof JQ) {\n      return selector;\n    }\n\n    if (typeof selector === 'string') {\n      var html = selector.trim();\n\n      if (html[0] === '<' && html[html.length - 1] === '>') {\n        // 创建 HTML 字符串\n        var toCreate = 'div';\n\n        if (html.indexOf('<li') === 0) {\n          toCreate = 'ul';\n        }\n\n        if (html.indexOf('<tr') === 0) {\n          toCreate = 'tbody';\n        }\n\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n          toCreate = 'tr';\n        }\n\n        if (html.indexOf('<tbody') === 0) {\n          toCreate = 'table';\n        }\n\n        if (html.indexOf('<option') === 0) {\n          toCreate = 'select';\n        }\n\n        var tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        // 选择器\n        var elems = selector[0] === '#' && !selector.match(/[ .<>:~]/)\n          ? [document.getElementById(selector.slice(1))]\n          : document.querySelectorAll(selector);\n\n        for (var i$1 = 0; i$1 < elems.length; i$1 += 1) {\n          if (elems[i$1]) {\n            arr.push(elems[i$1]);\n          }\n        }\n      }\n    } else if (typeof selector === 'function') {\n      // function\n      return $(document).ready(selector);\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // NodeList\n      for (var i$2 = 0; i$2 < selector.length; i$2 += 1) {\n        arr.push(selector[i$2]);\n      }\n    }\n\n    return new JQ(arr);\n  }\n\n  $.fn = JQ.prototype;\n\n  function extend() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (!args.length) {\n      return this;\n    }\n\n    // $.extend(obj)\n    if (args.length === 1) {\n      Object.keys(args[0]).forEach(function (prop) {\n        this$1[prop] = args[0][prop];\n      });\n\n      return this;\n    }\n\n    // $.extend({}, defaults[, obj])\n    var target = args.shift();\n\n    var loop = function ( i ) {\n      Object.keys(args[i]).forEach(function (prop) {\n        target[prop] = args[i][prop];\n      });\n    };\n\n    for (var i = 0; i < args.length; i += 1) loop( i );\n\n    return target;\n  }\n\n  $.fn.extend = extend;\n  $.extend = extend;\n\n  /**\n   * 判断一个节点名\n   * @param ele\n   * @param name\n   * @returns {boolean}\n   */\n  function isNodeName(ele, name) {\n    return ele.nodeName && ele.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  /**\n   * 除去 null 后的 object 类型\n   * @param obj\n   * @returns {*|boolean}\n   */\n  function isObjectLike(obj) {\n    return typeof obj === 'object' && obj !== null;\n  }\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  function isString(obj) {\n    return typeof obj === 'string';\n  }\n\n  function isWindow(win) {\n    return win && win === win.window;\n  }\n\n  function isDocument(doc) {\n    return doc && doc.nodeType === doc.DOCUMENT_NODE;\n  }\n\n  function isArrayLike(obj) {\n    return typeof obj.length === 'number';\n  }\n\n  /**\n   * 循环数组或对象\n   * @param obj\n   * @param callback\n   * @returns {*}\n   */\n  function each(obj, callback) {\n    if (isArrayLike(obj)) {\n      for (var i = 0; i < obj.length; i += 1) {\n        if (callback.call(obj[i], i, obj[i]) === false) {\n          return obj;\n        }\n      }\n    } else {\n      var keys = Object.keys(obj);\n      for (var i$1 = 0; i$1 < keys.length; i$1 += 1) {\n        if (callback.call(obj[keys[i$1]], keys[i$1], obj[keys[i$1]]) === false) {\n          return obj;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  /**\n   * 遍历数组或对象，通过函数返回一个新的数组或对象，null 和 undefined 将被过滤掉。\n   * @param elems\n   * @param callback\n   * @returns {Array}\n   */\n  function map(elems, callback) {\n    var ref;\n\n    var value;\n    var ret = [];\n\n    each(elems, function (i, elem) {\n      value = callback(elem, i);\n\n      if (value !== null && value !== undefined) {\n        ret.push(value);\n      }\n    });\n\n    return (ref = []).concat.apply(ref, ret);\n  }\n\n  /**\n   * 把对象合并到第一个参数中，并返回第一个参数\n   * @param first\n   * @param second\n   * @returns {*}\n   */\n  function merge(first, second) {\n    each(second, function (i, val) {\n      first.push(val);\n    });\n\n    return first;\n  }\n\n  /**\n   * 删除数组中重复元素\n   * @param arr {Array}\n   * @returns {Array}\n   */\n  function unique(arr) {\n    var result = [];\n\n    for (var i = 0; i < arr.length; i += 1) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n\n    return result;\n  }\n\n  var elementDisplay = {};\n\n  /**\n   * 获取元素的默认 display 样式值，用于 .show() 方法\n   * @param nodeName\n   * @returns {*}\n   */\n  function defaultDisplay(nodeName) {\n    var element;\n    var display;\n\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName);\n      document.body.appendChild(element);\n      display = getComputedStyle(element, '').getPropertyValue('display');\n      element.parentNode.removeChild(element);\n      if (display === 'none') {\n        display = 'block';\n      }\n\n      elementDisplay[nodeName] = display;\n    }\n\n    return elementDisplay[nodeName];\n  }\n\n  $.extend({\n    each: each,\n    merge: merge,\n    unique: unique,\n    map: map,\n\n    /**\n     * 一个 DOM 节点是否包含另一个 DOM 节点\n     * @param parent {Node} 父节点\n     * @param node {Node} 子节点\n     * @returns {Boolean}\n     */\n    contains: function contains(parent, node) {\n      if (parent && !node) {\n        return document.documentElement.contains(parent);\n      }\n\n      return parent !== node && parent.contains(node);\n    },\n\n    /**\n     * 将数组或对象序列化\n     * @param obj\n     * @returns {String}\n     */\n    param: function param(obj) {\n      if (!isObjectLike(obj)) {\n        return '';\n      }\n\n      var args = [];\n\n      function destructure(key, value) {\n        var keyTmp;\n\n        if (isObjectLike(value)) {\n          each(value, function (i, v) {\n            if (Array.isArray(value) && !isObjectLike(v)) {\n              keyTmp = '';\n            } else {\n              keyTmp = i;\n            }\n\n            destructure((key + \"[\" + keyTmp + \"]\"), v);\n          });\n        } else {\n          if (value !== null && value !== '') {\n            keyTmp = \"=\" + (encodeURIComponent(value));\n          } else {\n            keyTmp = '';\n          }\n\n          args.push(encodeURIComponent(key) + keyTmp);\n        }\n      }\n\n      each(obj, function (key, value) {\n        destructure(key, value);\n      });\n\n      return args.join('&');\n    },\n  });\n\n  $.fn.extend({\n    /**\n     * 遍历对象\n     * @param callback {Function}\n     * @return {JQ}\n     */\n    each: function each$1(callback) {\n      return each(this, callback);\n    },\n\n    /**\n     * 通过遍历集合中的节点对象，通过函数返回一个新的对象，null 或 undefined 将被过滤掉。\n     * @param callback {Function}\n     * @returns {JQ}\n     */\n    map: function map$1(callback) {\n      return new JQ(map(this, function (el, i) { return callback.call(el, i, el); }));\n    },\n\n    /**\n     * 获取指定 DOM 元素，没有 index 参数时，获取所有 DOM 的数组\n     * @param index {Number=}\n     * @returns {Node|Array}\n     */\n    get: function get(index) {\n      return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n    },\n\n    /**\n     * array中提取的方法。从start开始，如果end 指出。提取不包含end位置的元素。\n     * @param args {start, end}\n     * @returns {JQ}\n     */\n    slice: function slice() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return new JQ([].slice.apply(this, args));\n    },\n\n    /**\n     * 筛选元素集合\n     * @param selector {String|JQ|Node|Function}\n     * @returns {JQ}\n     */\n    filter: function filter(selector) {\n      if (isFunction(selector)) {\n        return this.map(function (index, ele) { return (selector.call(ele, index, ele) ? ele : undefined); });\n      }\n\n      var $selector = $(selector);\n\n      return this.map(function (index, ele) { return ($selector.index(ele) > -1 ? ele : undefined); });\n    },\n\n    /**\n     * 从元素集合中删除指定的元素\n     * @param selector {String|Node|JQ|Function}\n     * @return {JQ}\n     */\n    not: function not(selector) {\n      var $excludes = this.filter(selector);\n\n      return this.map(function (index, ele) { return ($excludes.index(ele) > -1 ? undefined : ele); });\n    },\n\n    /**\n     * 获取元素相对于 document 的偏移\n     * @returns {Object}\n     */\n    offset: function offset() {\n      if (this[0]) {\n        var offset = this[0].getBoundingClientRect();\n\n        return {\n          left: offset.left + window.pageXOffset,\n          top: offset.top + window.pageYOffset,\n          width: offset.width,\n          height: offset.height,\n        };\n      }\n\n      return null;\n    },\n\n    /**\n     * 返回最近的用于定位的父元素\n     * @returns {*|JQ}\n     */\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var parent = this.offsetParent;\n\n        while (parent && $(parent).css('position') === 'static') {\n          parent = parent.offsetParent;\n        }\n\n        return parent || document.documentElement;\n      });\n    },\n\n    /**\n     * 获取元素相对于父元素的偏移\n     * @return {Object}\n     */\n    position: function position() {\n      var self = this;\n\n      if (!self[0]) {\n        return null;\n      }\n\n      var offsetParent;\n      var offset;\n      var parentOffset = {\n        top: 0,\n        left: 0,\n      };\n\n      if (self.css('position') === 'fixed') {\n        offset = self[0].getBoundingClientRect();\n      } else {\n        offsetParent = self.offsetParent();\n        offset = self.offset();\n        if (!isNodeName(offsetParent[0], 'html')) {\n          parentOffset = offsetParent.offset();\n        }\n\n        parentOffset = {\n          top: parentOffset.top + offsetParent.css('borderTopWidth'),\n          left: parentOffset.left + offsetParent.css('borderLeftWidth'),\n        };\n      }\n\n      return {\n        top: offset.top - parentOffset.top - self.css('marginTop'),\n        left: offset.left - parentOffset.left - self.css('marginLeft'),\n        width: offset.width,\n        height: offset.height,\n      };\n    },\n\n    /**\n     * 显示指定元素\n     * @returns {JQ}\n     */\n    show: function show() {\n      return this.each(function () {\n        if (this.style.display === 'none') {\n          this.style.display = '';\n        }\n\n        if (window.getComputedStyle(this, '').getPropertyValue('display') === 'none') {\n          this.style.display = defaultDisplay(this.nodeName);\n        }\n      });\n    },\n\n    /**\n     * 隐藏指定元素\n     * @returns {JQ}\n     */\n    hide: function hide() {\n      return this.each(function () {\n        this.style.display = 'none';\n      });\n    },\n\n    /**\n     * 切换元素的显示状态\n     * @returns {JQ}\n     */\n    toggle: function toggle() {\n      return this.each(function () {\n        this.style.display = this.style.display === 'none' ? '' : 'none';\n      });\n    },\n\n    /**\n     * 是否含有指定的 CSS 类\n     * @param className {String}\n     * @returns {boolean}\n     */\n    hasClass: function hasClass(className) {\n      if (!this[0] || !className) {\n        return false;\n      }\n\n      return this[0].classList.contains(className);\n    },\n\n    /**\n     * 移除指定属性\n     * @param attr {String}\n     * @returns {JQ}\n     */\n    removeAttr: function removeAttr(attr) {\n      return this.each(function () {\n        this.removeAttribute(attr);\n      });\n    },\n\n    /**\n     * 删除属性值\n     * @param name {String}\n     * @returns {JQ}\n     */\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        try {\n          delete this[name];\n        } catch (e) {\n          // empty\n        }\n      });\n    },\n\n    /**\n     * 获取当前对象中第n个元素\n     * @param index {Number}\n     * @returns {JQ}\n     */\n    eq: function eq(index) {\n      var ret = index === -1\n        ? this.slice(index)\n        : this.slice(index, +index + 1);\n\n      return new JQ(ret);\n    },\n\n    /**\n     * 获取对象中第一个元素\n     * @returns {JQ}\n     */\n    first: function first() {\n      return this.eq(0);\n    },\n\n    /**\n     * 获取对象中最后一个元素\n     * @returns {JQ}\n     */\n    last: function last() {\n      return this.eq(-1);\n    },\n\n    /**\n     * 获取一个元素的位置。\n     * 当 elem 参数没有给出时，返回当前元素在兄弟节点中的位置。\n     * 有给出了 elem 参数时，返回 elem 元素在当前对象中的位置\n     * @param elem {Selector|Node=}\n     * @returns {Number}\n     */\n    index: function index(elem) {\n      if (!elem) {\n        // 获取当前 JQ 对象的第一个元素在同辈元素中的位置\n        return this\n          .eq(0)\n          .parent()\n          .children()\n          .get()\n          .indexOf(this[0]);\n      }\n\n      if (isString(elem)) {\n        // 返回当前 JQ 对象的第一个元素在指定选择器对应的元素中的位置\n        return $(elem)\n          .eq(0)\n          .parent()\n          .children()\n          .get()\n          .indexOf(this[0]);\n      }\n\n      // 返回指定元素在当前 JQ 对象中的位置\n      return this\n        .get()\n        .indexOf(elem);\n    },\n\n    /**\n     * 根据选择器、DOM元素或 JQ 对象来检测匹配元素集合，\n     * 如果其中至少有一个元素符合这个给定的表达式就返回true\n     * @param selector {String|Node|NodeList|Array|JQ|Window}\n     * @returns boolean\n     */\n    is: function is(selector) {\n      var self = this[0];\n\n      if (!self || selector === undefined || selector === null) {\n        return false;\n      }\n\n      if (isString(selector)) {\n        if (self === document || self === window) {\n          return false;\n        }\n\n        var matchesSelector = self.matches\n          || self.matchesSelector\n          || self.webkitMatchesSelector\n          || self.mozMatchesSelector\n          || self.oMatchesSelector\n          || self.msMatchesSelector;\n\n        return matchesSelector.call(self, selector);\n      }\n\n      if (selector === document || selector === window) {\n        return self === selector;\n      }\n\n      if (selector.nodeType || isArrayLike(selector)) {\n        var $compareWith = selector.nodeType ? [selector] : selector;\n\n        for (var i = 0; i < $compareWith.length; i += 1) {\n          if ($compareWith[i] === self) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return false;\n    },\n\n    /**\n     * 根据 CSS 选择器找到后代节点的集合\n     * @param selector {String}\n     * @returns {JQ}\n     */\n    find: function find(selector) {\n      var foundElements = [];\n\n      this.each(function (i, _this) {\n        var nodeType = _this.nodeType;\n\n        if (nodeType !== 1 && nodeType !== 9) {\n          // 不是 element 和 document 则跳过\n          return;\n        }\n\n        merge(foundElements, _this.querySelectorAll(selector));\n      });\n\n      return new JQ(foundElements);\n    },\n\n    /**\n     * 找到直接子元素的元素集合\n     * @param selector {String=}\n     * @returns {JQ}\n     */\n    children: function children(selector) {\n      var children = [];\n\n      this.each(function (_, _this) {\n        each(_this.childNodes, function (__, childNode) {\n          if (childNode.nodeType !== 1) {\n            return;\n          }\n\n          if (!selector || (selector && $(childNode).is(selector))) {\n            children.push(childNode);\n          }\n        });\n      });\n\n      return new JQ(unique(children));\n    },\n\n    /**\n     * 保留含有指定子元素的元素，去掉不含有指定子元素的元素\n     * @param selector {String|Node|JQ|NodeList|Array}\n     * @return {JQ}\n     */\n    has: function has(selector) {\n      var $targets = isString(selector) ? this.find(selector) : $(selector);\n      var length = $targets.length;\n\n      return this.filter(function () {\n        for (var i = 0; i < length; i += 1) {\n          if ($.contains(this, $targets[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    },\n\n    /**\n     * 取得同辈元素的集合\n     * @param selector {String=}\n     * @returns {JQ}\n     */\n    siblings: function siblings(selector) {\n      return this.prevAll(selector).add(this.nextAll(selector));\n    },\n\n    /**\n     * 返回首先匹配到的父节点，包含父节点\n     * @param selector {String}\n     * @returns {JQ}\n     */\n    closest: function closest(selector) {\n      var self = this;\n\n      if (!self.is(selector)) {\n        self = self.parents(selector).eq(0);\n      }\n\n      return self;\n    },\n\n    /**\n     * 删除所有匹配的元素\n     * @returns {JQ}\n     */\n    remove: function remove() {\n      return this.each(function (i, _this) {\n        if (_this.parentNode) {\n          _this.parentNode.removeChild(_this);\n        }\n      });\n    },\n\n    /**\n     * 添加匹配的元素到当前对象中\n     * @param selector {String|JQ}\n     * @returns {JQ}\n     */\n    add: function add(selector) {\n      return new JQ(unique(merge(this.get(), $(selector))));\n    },\n\n    /**\n     * 删除子节点\n     * @returns {JQ}\n     */\n    empty: function empty() {\n      return this.each(function () {\n        this.innerHTML = '';\n      });\n    },\n\n    /**\n     * 通过深度克隆来复制集合中的所有元素。\n     * (通过原生 cloneNode 方法深度克隆来复制集合中的所有元素。此方法不会有数据和事件处理程序复制到新的元素。这点和jquery中利用一个参数来确定是否复制数据和事件处理不相同。)\n     * @returns {JQ}\n     */\n    clone: function clone() {\n      return this.map(function () {\n        return this.cloneNode(true);\n      });\n    },\n\n    /**\n     * 用新元素替换当前元素\n     * @param newContent {String|Node|NodeList|JQ}\n     * @returns {JQ}\n     */\n    replaceWith: function replaceWith(newContent) {\n      return this.before(newContent).remove();\n    },\n\n    /**\n     * 将表单元素的值组合成键值对数组\n     * @returns {Array}\n     */\n    serializeArray: function serializeArray() {\n      var result = [];\n      var elem = this[0];\n\n      if (!elem || !elem.elements) {\n        return result;\n      }\n\n      $([].slice.call(elem.elements)).each(function () {\n        var $elem = $(this);\n        var type = $elem.attr('type');\n        if (\n          this.nodeName.toLowerCase() !== 'fieldset'\n          && !this.disabled\n          && ['submit', 'reset', 'button'].indexOf(type) === -1\n          && (['radio', 'checkbox'].indexOf(type) === -1 || this.checked)\n        ) {\n          result.push({\n            name: $elem.attr('name'),\n            value: $elem.val(),\n          });\n        }\n      });\n\n      return result;\n    },\n\n    /**\n     * 将表单元素或对象序列化\n     * @returns {String}\n     */\n    serialize: function serialize() {\n      var result = [];\n\n      each(this.serializeArray(), function (i, elem) {\n        result.push(((encodeURIComponent(elem.name)) + \"=\" + (encodeURIComponent(elem.value))));\n      });\n\n      return result.join('&');\n    },\n  });\n\n  /**\n   * val - 获取或设置元素的值\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  /**\n   * html - 获取或设置元素的 HTML\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  /**\n   * text - 获取或设置元素的内容\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  each(['val', 'html', 'text'], function (nameIndex, name) {\n    var props = {\n      0: 'value',\n      1: 'innerHTML',\n      2: 'textContent',\n    };\n\n    var defaults = {\n      0: undefined,\n      1: undefined,\n      2: null,\n    };\n\n    $.fn[name] = function (value) {\n      if (value === undefined) {\n        // 获取值\n        return this[0] ? this[0][props[nameIndex]] : defaults[nameIndex];\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        elem[props[nameIndex]] = value;\n      });\n    };\n  });\n\n  /**\n   * attr - 获取或设置元素的属性值\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  /**\n   * prop - 获取或设置元素的属性值\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  /**\n   * css - 获取或设置元素的样式\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  each(['attr', 'prop', 'css'], function (nameIndex, name) {\n    function set(elem, key, value) {\n      if (nameIndex === 0) {\n        elem.setAttribute(key, value);\n      } else if (nameIndex === 1) {\n        elem[key] = value;\n      } else {\n        elem.style[key] = value;\n      }\n    }\n\n    function get(elem, key) {\n      if (!elem) {\n        return undefined;\n      }\n\n      if (nameIndex === 0) {\n        return elem.getAttribute(key);\n      }\n\n      if (nameIndex === 1) {\n        return elem[key];\n      }\n\n      return window.getComputedStyle(elem, null).getPropertyValue(key);\n    }\n\n    $.fn[name] = function (key, value) {\n      var argLength = arguments.length;\n\n      if (argLength === 1 && isString(key)) {\n        // 获取值\n        return get(this[0], key);\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        if (argLength === 2) {\n          set(elem, key, value);\n        } else {\n          each(key, function (k, v) {\n            set(elem, k, v);\n          });\n        }\n      });\n    };\n  });\n\n  /**\n   * addClass - 添加 CSS 类，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  /**\n   * removeClass - 移除 CSS 类，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  /**\n   * toggleClass - 切换 CSS 类名，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  each(['add', 'remove', 'toggle'], function (nameIndex, name) {\n    $.fn[(name + \"Class\")] = function (className) {\n      if (!className) {\n        return this;\n      }\n\n      var classes = className.split(' ');\n\n      return this.each(function (i, elem) {\n        each(classes, function (j, cls) {\n          elem.classList[name](cls);\n        });\n      });\n    };\n  });\n\n  /**\n   * width - 获取元素的宽度\n   * @return {Number}\n   */\n  /**\n   * height - 获取元素的高度\n   * @return {Number}\n   */\n  each({\n    Width: 'width',\n    Height: 'height',\n  }, function (prop, name) {\n    $.fn[name] = function (val) {\n      if (val === undefined) {\n        // 获取\n        var elem = this[0];\n\n        if (isWindow(elem)) {\n          return elem[(\"inner\" + prop)];\n        }\n\n        if (isDocument(elem)) {\n          return elem.documentElement[(\"scroll\" + prop)];\n        }\n\n        var $elem = $(elem);\n\n        // IE10、IE11 在 box-sizing:border-box 时，不会包含 padding 和 border，这里进行修复\n        var IEFixValue = 0;\n        var isWidth = name === 'width';\n        if ('ActiveXObject' in window) { // 判断是 IE 浏览器\n          if ($elem.css('box-sizing') === 'border-box') {\n            IEFixValue = parseFloat($elem.css((\"padding-\" + (isWidth ? 'left' : 'top'))))\n              + parseFloat($elem.css((\"padding-\" + ((isWidth ? 'right' : 'bottom')))))\n              + parseFloat($elem.css((\"border-\" + (isWidth ? 'left' : 'top') + \"-width\")))\n              + parseFloat($elem.css((\"border-\" + (isWidth ? 'right' : 'bottom') + \"-width\")));\n          }\n        }\n\n        return parseFloat($(elem).css(name)) + IEFixValue;\n      }\n\n      // 设置\n      /* eslint no-restricted-globals: 0 */\n      if (!isNaN(Number(val)) && val !== '') {\n        val += 'px';\n      }\n\n      return this.css(name, val);\n    };\n  });\n\n  /**\n   * innerWidth - 获取元素的宽度，包含内边距\n   * @return {Number}\n   */\n  /**\n   * innerHeight - 获取元素的高度，包含内边距\n   * @return {Number}\n   */\n  each({\n    Width: 'width',\n    Height: 'height',\n  }, function (prop, name) {\n    $.fn[(\"inner\" + prop)] = function () {\n      var value = this[name]();\n      var $elem = $(this[0]);\n\n      if ($elem.css('box-sizing') !== 'border-box') {\n        value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'left' : 'top'))));\n        value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'right' : 'bottom'))));\n      }\n\n      return value;\n    };\n  });\n\n  function dir(nodes, selector, nameIndex, node) {\n    var ret = [];\n    var elem;\n\n    nodes.each(function (j, _this) {\n      elem = _this[node];\n      while (elem) {\n        if (nameIndex === 2) {\n          // prevUntil\n          if (!selector || (selector && $(elem).is(selector))) {\n            break;\n          }\n\n          ret.push(elem);\n        } else if (nameIndex === 0) {\n          // prev\n          if (!selector || (selector && $(elem).is(selector))) {\n            ret.push(elem);\n          }\n\n          break;\n        } else if (!selector || (selector && $(elem).is(selector))) {\n          // prevAll\n          ret.push(elem);\n        }\n\n        elem = elem[node];\n      }\n    });\n\n    return new JQ(unique(ret));\n  }\n\n  /**\n   * prev - 取得前一个匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * prevAll - 取得前面所有匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * prevUntil - 取得前面的所有元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 'All', 'Until'], function (nameIndex, name) {\n    $.fn[(\"prev\" + name)] = function (selector) {\n      // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n      var $nodes = nameIndex === 0 ? this : $(this.get().reverse());\n\n      return dir($nodes, selector, nameIndex, 'previousElementSibling');\n    };\n  });\n\n  /**\n   * next - 取得后一个匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * nextAll - 取得后面所有匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * nextUntil - 取得后面所有匹配的元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 'All', 'Until'], function (nameIndex, name) {\n    $.fn[(\"next\" + name)] = function (selector) {\n      return dir(this, selector, nameIndex, 'nextElementSibling');\n    };\n  });\n\n  /**\n   * parent - 取得匹配的直接父元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * parents - 取得所有匹配的父元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * parentUntil - 取得所有的父元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 's', 'sUntil'], function (nameIndex, name) {\n    $.fn[(\"parent\" + name)] = function (selector) {\n      // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n      var $nodes = nameIndex === 0 ? this : $(this.get().reverse());\n\n      return dir($nodes, selector, nameIndex, 'parentNode');\n    };\n  });\n\n  /**\n   * append - 在元素内部追加内容\n   * @param newChild {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * prepend - 在元素内部前置内容\n   * @param newChild {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each(['append', 'prepend'], function (nameIndex, name) {\n    $.fn[name] = function (newChild) {\n      var newChilds;\n      var copyByClone = this.length > 1;\n\n      if (isString(newChild) && (newChild[0] !== '<' || newChild[newChild.length - 1] !== '>')) {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        newChilds = [].slice.call(tempDiv.childNodes);\n      } else {\n        newChilds = $(newChild).get();\n      }\n\n      if (nameIndex === 1) {\n        // prepend\n        newChilds.reverse();\n      }\n\n      return this.each(function (i, _this) {\n        each(newChilds, function (j, child) {\n          // 一个元素要同时追加到多个元素中，需要先复制一份，然后追加\n          if (copyByClone && i > 0) {\n            child = child.cloneNode(true);\n          }\n\n          if (nameIndex === 0) {\n            // append\n            _this.appendChild(child);\n          } else {\n            // prepend\n            _this.insertBefore(child, _this.childNodes[0]);\n          }\n        });\n      });\n    };\n  });\n\n  /**\n   * insertBefore - 插入到指定元素的前面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * insertAfter - 插入到指定元素的后面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each(['insertBefore', 'insertAfter'], function (nameIndex, name) {\n    $.fn[name] = function (selector) {\n      var $elem = $(selector);\n\n      return this.each(function (i, _this) {\n        $elem.each(function (j, elem) {\n          elem.parentNode.insertBefore(\n            $elem.length === 1 ? _this : _this.cloneNode(true),\n            nameIndex === 0 ? elem : elem.nextSibling\n          );\n        });\n      });\n    };\n  });\n\n  /**\n   * appendTo - 追加到指定元素内容\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * prependTo - 前置到指定元素内部\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * before - 插入到指定元素前面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * after - 插入到指定元素后面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * replaceAll - 替换掉指定元素\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each({\n    appendTo: 'append',\n    prependTo: 'prepend',\n    before: 'insertBefore',\n    after: 'insertAfter',\n    replaceAll: 'replaceWith',\n  }, function (name, original) {\n    $.fn[name] = function (selector) {\n      $(selector)[original](this);\n      return this;\n    };\n  });\n\n  var dataNS = 'mduiElementDataStorage';\n\n  $.extend({\n    /**\n     * 在指定元素上存储数据，或从指定元素上读取数据\n     * @param elem 必须， DOM 元素\n     * @param key 必须，键名\n     * @param value 可选，值\n     */\n    data: function data(elem, key, value) {\n      var data = {};\n\n      if (value !== undefined) {\n        // 根据 key、value 设置值\n        data[key] = value;\n      } else if (isObjectLike(key)) {\n        // 根据键值对设置值\n        data = key;\n      } else if (key === undefined) {\n        // 获取所有值\n        var result = {};\n\n        each(elem.attributes, function (i, attribute) {\n          var name = attribute.name;\n\n          if (name.indexOf('data-') === 0) {\n            var prop = name.slice(5).replace(/-./g, function (u) { return u.charAt(1).toUpperCase(); });\n\n            result[prop] = attribute.value;\n          }\n        });\n\n        if (elem[dataNS]) {\n          each(elem[dataNS], function (k, v) {\n            result[k] = v;\n          });\n        }\n\n        return result;\n      } else if (elem[dataNS] && (key in elem[dataNS])) {\n        // 获取指定值\n        return elem[dataNS][key];\n      } else {\n        // 从 data- 中获取指定值\n        var dataKey = elem.getAttribute((\"data-\" + key));\n\n        if (dataKey) {\n          return dataKey;\n        }\n\n        return undefined;\n      }\n\n      // 设置值\n      if (!elem[dataNS]) {\n        elem[dataNS] = {};\n      }\n\n      each(data, function (k, v) {\n        elem[dataNS][k] = v;\n      });\n\n      return undefined;\n    },\n\n    /**\n     * 移除指定元素上存放的数据\n     * @param elem 必须，DOM 元素\n     * @param key 必须，键名\n     */\n    removeData: function removeData(elem, key) {\n      if (elem[dataNS] && elem[dataNS][key]) {\n        elem[dataNS][key] = null;\n        delete elem[dataNS][key];\n      }\n    },\n  });\n\n  $.fn.extend({\n    /**\n     * 在元素上读取或设置数据\n     * @param key 必须\n     * @param value\n     * @returns {*}\n     */\n    data: function data(key, value) {\n      if (value === undefined) {\n        if (isObjectLike(key)) {\n          // 同时设置多个值\n          return this.each(function (i, elem) {\n            $.data(elem, key);\n          });\n        }\n\n        if (this[0]) {\n          // 获取值\n          return $.data(this[0], key);\n        }\n\n        return undefined;\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        $.data(elem, key, value);\n      });\n    },\n\n    /**\n     * 移除元素上存储的数据\n     * @param key 必须\n     * @returns {*}\n     */\n    removeData: function removeData(key) {\n      return this.each(function (i, elem) {\n        $.removeData(elem, key);\n      });\n    },\n  });\n\n  !function(){try{return new e(\"test\")}catch(e){}var e=function(e,t){t=t||{bubbles:!1,cancelable:!1};var n=document.createEvent(\"MouseEvent\");return n.initMouseEvent(e,t.bubbles,t.cancelable,window,0,0,0,0,0,!1,!1,!1,!1,0,null),n};e.prototype=Event.prototype,window.MouseEvent=e;}();\n\n  !function(){function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),n}\"function\"!=typeof window.CustomEvent&&(t.prototype=window.Event.prototype,window.CustomEvent=t);}();\n\n  // 存储事件\n  var handlers = {\n    // i: { // 元素ID\n    //   j: { // 事件ID\n    //     e: 事件名\n    //     fn: 事件处理函数\n    //     i: 事件ID\n    //     proxy:\n    //     sel: 选择器\n    //   }\n    // }\n  };\n\n  // 元素ID\n  var mduiElementId = 1;\n\n  function fnFalse() {\n    return false;\n  }\n\n  /**\n   * 为元素赋予一个唯一的ID\n   * @param element\n   * @returns {number|*}\n   */\n  function getElementId(element) {\n    if (!element.mduiElementId) {\n      mduiElementId += 1;\n      element.mduiElementId = mduiElementId;\n    }\n\n    return element.mduiElementId;\n  }\n\n  /**\n   * 获取匹配的事件\n   * @param element\n   * @param eventName\n   * @param func\n   * @param selector\n   * @returns {Array}\n   */\n  function getHandlers(element, eventName, func, selector) {\n    return (handlers[getElementId(element)] || []).filter(function (handler) { return handler\n      && (!eventName || handler.e === eventName)\n      && (!func || handler.fn.toString() === func.toString())\n      && (!selector || handler.sel === selector); });\n  }\n\n  /**\n   * 添加事件监听\n   * @param element\n   * @param eventName\n   * @param func\n   * @param data\n   * @param selector\n   */\n  function add(element, eventName, func, data, selector) {\n    var elementId = getElementId(element);\n\n    if (!handlers[elementId]) {\n      handlers[elementId] = [];\n    }\n\n    // 传入 data.useCapture 来设置 useCapture: true\n    var useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n      useCapture = true;\n    }\n\n    eventName.split(' ').forEach(function (event) {\n      var handler = {\n        e: event,\n        fn: func,\n        sel: selector,\n        i: handlers[elementId].length,\n      };\n\n      function callFn(e, elem) {\n        // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n        /* eslint no-underscore-dangle: 0 */\n        var result = func.apply(elem, e._detail === undefined ? [e] : [e].concat(e._detail));\n\n        if (result === false) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n\n      function proxyfn(e) {\n        e._data = data;\n\n        if (selector) {\n          // 事件代理\n          $(element)\n            .find(selector)\n            .get()\n            .reverse()\n            .forEach(function (elem) {\n              if (elem === e.target || $.contains(elem, e.target)) {\n                callFn(e, elem);\n              }\n            });\n        } else {\n          // 不使用事件代理\n          callFn(e, element);\n        }\n      }\n\n      handler.proxy = proxyfn;\n      handlers[elementId].push(handler);\n      element.addEventListener(handler.e, proxyfn, useCapture);\n    });\n  }\n\n  /**\n   * 移除事件监听\n   * @param element\n   * @param eventName\n   * @param func\n   * @param selector\n   */\n  function remove(element, eventName, func, selector) {\n    (eventName || '').split(' ').forEach(function (event) {\n      getHandlers(element, event, func, selector).forEach(function (handler) {\n        delete handlers[getElementId(element)][handler.i];\n        element.removeEventListener(handler.e, handler.proxy, false);\n      });\n    });\n  }\n\n  $.fn.extend({\n    /**\n     * DOM 加载完毕后调用的函数\n     * @param callback\n     * @returns {ready}\n     */\n    ready: function ready(callback) {\n      if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n        callback($);\n      } else {\n        document.addEventListener('DOMContentLoaded', function () {\n          callback($);\n        }, false);\n      }\n\n      return this;\n    },\n\n    /**\n     * 绑定事件\n     *\n     * $().on({eventName: fn}, selector, data);\n     * $().on({eventName: fn}, selector)\n     * $().on({eventName: fn})\n     * $().on(eventName, selector, data, fn);\n     * $().on(eventName, selector, fn);\n     * $().on(eventName, data, fn);\n     * $().on(eventName, fn);\n     * $().on(eventName, false);\n     *\n     * @param eventName\n     * @param selector\n     * @param data\n     * @param callback\n     * @param one 是否是 one 方法，只在 JQ 内部使用\n     * @returns\n     */\n    on: function on(eventName, selector, data, callback, one) {\n      var self = this;\n\n      // 默认\n      // $().on(event, selector, data, callback)\n\n      // event 使用 事件:函数 键值对\n      // event = {\n      //   'event1': callback1,\n      //   'event2': callback2\n      // }\n      //\n      // $().on(event, selector, data)\n      if (eventName && !isString(eventName)) {\n        each(eventName, function (type, fn) {\n          self.on(type, selector, data, fn);\n        });\n\n        return self;\n      }\n\n      // selector 不存在\n      // $().on(event, data, callback)\n      if (!isString(selector) && !isFunction(callback) && callback !== false) {\n        callback = data;\n        data = selector;\n        selector = undefined;\n      }\n\n      // data 不存在\n      // $().on(event, callback)\n      if (isFunction(data) || data === false) {\n        callback = data;\n        data = undefined;\n      }\n\n      // callback 为 false\n      // $().on(event, false)\n      if (callback === false) {\n        callback = fnFalse;\n      }\n\n      if (one === 1) {\n        var origCallback = callback;\n        callback = function () {\n          self.off(eventName, selector, callback);\n          /* eslint prefer-rest-params: 0 */\n          return origCallback.apply(this, arguments);\n        };\n      }\n\n      return this.each(function () {\n        add(this, eventName, callback, data, selector);\n      });\n    },\n\n    /**\n     * 绑定事件，只触发一次\n     * @param eventName\n     * @param selector\n     * @param data\n     * @param callback\n     */\n    one: function one(eventName, selector, data, callback) {\n      var self = this;\n\n      if (!isString(eventName)) {\n        each(eventName, function (type, fn) {\n          type.split(' ').forEach(function (eName) {\n            self.on(eName, selector, data, fn, 1);\n          });\n        });\n      } else {\n        eventName.split(' ').forEach(function (eName) {\n          self.on(eName, selector, data, callback, 1);\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * 取消绑定事件\n     *\n     * $().off(eventName, selector);\n     * $().off(eventName, callback);\n     * $().off(eventName, false);\n     *\n     */\n    off: function off(eventName, selector, callback) {\n      var self = this;\n\n      // event 使用 事件:函数 键值对\n      // event = {\n      //   'event1': callback1,\n      //   'event2': callback2\n      // }\n      //\n      // $().off(event, selector)\n      if (eventName && !isString(eventName)) {\n        each(eventName, function (type, fn) {\n          self.off(type, selector, fn);\n        });\n\n        return self;\n      }\n\n      // selector 不存在\n      // $().off(event, callback)\n      if (!isString(selector) && !isFunction(callback) && callback !== false) {\n        callback = selector;\n        selector = undefined;\n      }\n\n      // callback 为 false\n      // $().off(event, false)\n      if (callback === false) {\n        callback = fnFalse;\n      }\n\n      return self.each(function () {\n        remove(this, eventName, callback, selector);\n      });\n    },\n\n    /**\n     * 触发一个事件\n     * @param eventName\n     * @param data\n     * @returns {*|JQ}\n     */\n    trigger: function trigger(eventName, data) {\n      var isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(eventName) > -1;\n      var evt;\n\n      if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        evt = new MouseEvent(eventName, {\n          bubbles: true,\n          cancelable: true,\n        });\n      } else {\n        evt = new CustomEvent(eventName, {\n          detail: data,\n          bubbles: true,\n          cancelable: true,\n        });\n      }\n\n      evt._detail = data;\n\n      return this.each(function () {\n        this.dispatchEvent(evt);\n      });\n    },\n  });\n\n  var globalOptions = {};\n  var jsonpID = 0;\n\n  // 全局事件名\n  var ajaxEvent = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n  };\n\n  /**\n   * 判断此请求方法是否通过查询字符串提交参数\n   * @param method 请求方法，大写\n   * @returns {boolean}\n   */\n  function isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n  }\n\n  /**\n   * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n   * @param url\n   * @param query 参数 key=value\n   * @returns {string}\n   */\n  function appendQuery(url, query) {\n    return ((url + \"&\" + query)).replace(/[&?]{1,2}/, '?');\n  }\n\n  $.extend({\n\n    /**\n     * 为 ajax 请求设置全局配置参数\n     * @param options\n     */\n    ajaxSetup: function ajaxSetup(options) {\n      $.extend(globalOptions, options || {});\n    },\n\n    /**\n     * 发送 ajax 请求\n     * @param options\n     */\n    ajax: function ajax(options) {\n      // 配置参数\n      var defaults = {\n        // 请求方式\n        method: 'GET',\n        // 请求的数据，查询字符串或对象\n        data: false,\n        // 是否把数据转换为查询字符串发送，为 false 时不进行自动转换。\n        processData: true,\n        // 是否为异步请求\n        async: true,\n        // 是否从缓存中读取，只对 GET/HEAD 请求有效，dataType 为 jsonp 时为 false\n        cache: true,\n        // HTTP 访问认证的用户名\n        username: '',\n        // HTTP 访问认证的密码\n        password: '',\n        // 一个键值对，随着请求一起发送\n        headers: {},\n        // 设置 XHR 对象\n        xhrFields: {},\n        // 一个 HTTP 代码和函数的对象\n        statusCode: {},\n        // 预期服务器返回的数据类型 text、json、jsonp\n        dataType: 'text',\n        // jsonp 请求的回调函数名称\n        jsonp: 'callback',\n        // （string 或 Function）使用指定的回调函数名代替自动生成的回调函数名\n        jsonpCallback: function () {\n          jsonpID += 1;\n\n          return (\"mduijsonp_\" + (Date.now()) + \"_\" + jsonpID);\n        },\n        // 发送信息至服务器时内容编码类型\n        contentType: 'application/x-www-form-urlencoded',\n        // 设置请求超时时间（毫秒）\n        timeout: 0,\n        // 是否在 document 上触发全局 ajax 事件\n        global: true,\n        // beforeSend:    function (XMLHttpRequest) 请求发送前执行，返回 false 可取消本次 ajax 请求\n        // success:       function (data, textStatus, XMLHttpRequest) 请求成功时调用\n        // error:         function (XMLHttpRequest, textStatus) 请求失败时调用\n        // statusCode:    {404: function ()}\n        //                200-299之间的状态码表示成功，参数和 success 回调一样；其他状态码表示失败，参数和 error 回调一样\n        // complete:      function (XMLHttpRequest, textStatus) 请求完成后回调函数 (请求成功或失败之后均调用)\n      };\n\n      // 回调函数\n      var callbacks = [\n        'beforeSend',\n        'success',\n        'error',\n        'statusCode',\n        'complete' ];\n\n      // 是否已取消请求\n      var isCanceled = false;\n\n      // 保存全局配置\n      var globals = globalOptions;\n\n      // 事件参数\n      var eventParams = {};\n\n      // 合并全局参数到默认参数，全局回调函数不覆盖\n      each(globals, function (key, value) {\n        if (callbacks.indexOf(key) < 0) {\n          defaults[key] = value;\n        }\n      });\n\n      // 参数合并\n      options = $.extend({}, defaults, options);\n\n      /**\n       * 触发全局事件\n       * @param event string 事件名\n       * @param xhr XMLHttpRequest 事件参数\n       */\n      function triggerEvent(event, xhr) {\n        if (options.global) {\n          $(document).trigger(event, xhr);\n        }\n      }\n\n      /**\n       * 触发 XHR 回调和事件\n       * @param callback string 回调函数名称\n       * @param args\n       */\n      function triggerCallback(callback) {\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n        var result1;\n        var result2;\n\n        if (callback) {\n          // 全局回调\n          if (callback in globals) {\n            result1 = globals[callback].apply(globals, args);\n          }\n\n          // 自定义回调\n          if (options[callback]) {\n            result2 = options[callback].apply(options, args);\n          }\n\n          // beforeSend 回调返回 false 时取消 ajax 请求\n          if (callback === 'beforeSend' && (result1 === false || result2 === false)) {\n            isCanceled = true;\n          }\n        }\n      }\n\n      // 请求方式转为大写\n      var method = options.method.toUpperCase();\n\n      // 默认使用当前页面 URL\n      if (!options.url) {\n        options.url = window.location.toString();\n      }\n\n      // 需要发送的数据\n      // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n      var sendData;\n      if (\n        (isQueryStringData(method) || options.processData)\n        && options.data\n        && [ArrayBuffer, Blob, Document, FormData].indexOf(options.data.constructor) < 0\n      ) {\n        sendData = isString(options.data) ? options.data : $.param(options.data);\n      } else {\n        sendData = options.data;\n      }\n\n      // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n      if (isQueryStringData(method) && sendData) {\n        // 查询字符串拼接到 URL 中\n        options.url = appendQuery(options.url, sendData);\n        sendData = null;\n      }\n\n      // JSONP\n      if (options.dataType === 'jsonp') {\n        // URL 中添加自动生成的回调函数名\n        var callbackName = isFunction(options.jsonpCallback)\n          ? options.jsonpCallback()\n          : options.jsonpCallback;\n        var requestUrl = appendQuery(options.url, ((options.jsonp) + \"=\" + callbackName));\n\n        eventParams.options = options;\n\n        triggerEvent(ajaxEvent.ajaxStart, eventParams);\n        triggerCallback('beforeSend', null);\n\n        if (isCanceled) {\n          return undefined;\n        }\n\n        var abortTimeout;\n\n        // 创建 script\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n\n        // 创建 script 失败\n        script.onerror = function () {\n          if (abortTimeout) {\n            clearTimeout(abortTimeout);\n          }\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', null, 'scripterror');\n\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', null, 'scripterror');\n        };\n\n        script.src = requestUrl;\n\n        // 处理\n        window[callbackName] = function (data) {\n          if (abortTimeout) {\n            clearTimeout(abortTimeout);\n          }\n\n          eventParams.data = data;\n\n          triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n          triggerCallback('success', data, 'success', null);\n\n          $(script).remove();\n          script = null;\n          delete window[callbackName];\n        };\n\n        $('head').append(script);\n\n        if (options.timeout > 0) {\n          abortTimeout = setTimeout(function () {\n            $(script).remove();\n            script = null;\n\n            triggerEvent(ajaxEvent.ajaxError, eventParams);\n            triggerCallback('error', null, 'timeout');\n          }, options.timeout);\n        }\n\n        return undefined;\n      }\n\n      // GET/HEAD 请求的缓存处理\n      if (isQueryStringData(method) && !options.cache) {\n        options.url = appendQuery(options.url, (\"_=\" + (Date.now())));\n      }\n\n      // 创建 XHR\n      var xhr = new XMLHttpRequest();\n\n      xhr.open(method, options.url, options.async, options.username, options.password);\n\n      if (\n        options.contentType\n        || (\n          sendData\n          && !isQueryStringData(method)\n          && options.contentType !== false\n        )\n      ) {\n        xhr.setRequestHeader('Content-Type', options.contentType);\n      }\n\n      // 设置 Accept\n      if (options.dataType === 'json') {\n        xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n      }\n\n      // 添加 headers\n      if (options.headers) {\n        each(options.headers, function (key, value) {\n          xhr.setRequestHeader(key, value);\n        });\n      }\n\n      // 检查是否是跨域请求\n      if (options.crossDomain === undefined) {\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(options.url)\n          && RegExp.$2 !== window.location.host;\n      }\n\n      if (!options.crossDomain) {\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      }\n\n      if (options.xhrFields) {\n        each(options.xhrFields, function (key, value) {\n          xhr[key] = value;\n        });\n      }\n\n      eventParams.xhr = xhr;\n      eventParams.options = options;\n\n      var xhrTimeout;\n\n      xhr.onload = function () {\n        if (xhrTimeout) {\n          clearTimeout(xhrTimeout);\n        }\n\n        // 包含成功或错误代码的字符串\n        var textStatus;\n\n        // AJAX 返回的 HTTP 响应码是否表示成功\n        var isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 0;\n\n        var responseData;\n\n        if (isHttpStatusSuccess) {\n          if (xhr.status === 204 || method === 'HEAD') {\n            textStatus = 'nocontent';\n          } else if (xhr.status === 304) {\n            textStatus = 'notmodified';\n          } else {\n            textStatus = 'success';\n          }\n\n          if (options.dataType === 'json') {\n            try {\n              responseData = JSON.parse(xhr.responseText);\n              eventParams.data = responseData;\n            } catch (err) {\n              textStatus = 'parsererror';\n\n              triggerEvent(ajaxEvent.ajaxError, eventParams);\n              triggerCallback('error', xhr, textStatus);\n            }\n\n            if (textStatus !== 'parsererror') {\n              triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n              triggerCallback('success', responseData, textStatus, xhr);\n            }\n          } else {\n            responseData = xhr.responseType === 'text' || xhr.responseType === ''\n              ? xhr.responseText\n              : xhr.response;\n            eventParams.data = responseData;\n\n            triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n            triggerCallback('success', responseData, textStatus, xhr);\n          }\n        } else {\n          textStatus = 'error';\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', xhr, textStatus);\n        }\n\n        // statusCode\n        each([globals.statusCode, options.statusCode], function (i, func) {\n          if (func && func[xhr.status]) {\n            if (isHttpStatusSuccess) {\n              func[xhr.status](responseData, textStatus, xhr);\n            } else {\n              func[xhr.status](xhr, textStatus);\n            }\n          }\n        });\n\n        triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n        triggerCallback('complete', xhr, textStatus);\n      };\n\n      xhr.onerror = function () {\n        if (xhrTimeout) {\n          clearTimeout(xhrTimeout);\n        }\n\n        triggerEvent(ajaxEvent.ajaxError, eventParams);\n        triggerCallback('error', xhr, xhr.statusText);\n\n        triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n        triggerCallback('complete', xhr, 'error');\n      };\n\n      xhr.onabort = function () {\n        var textStatus = 'abort';\n\n        if (xhrTimeout) {\n          textStatus = 'timeout';\n          clearTimeout(xhrTimeout);\n        }\n\n        triggerEvent(ajaxEvent.ajaxError, eventParams);\n        triggerCallback('error', xhr, textStatus);\n\n        triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n        triggerCallback('complete', xhr, textStatus);\n      };\n\n      // ajax start 回调\n      triggerEvent(ajaxEvent.ajaxStart, eventParams);\n      triggerCallback('beforeSend', xhr);\n\n      if (isCanceled) {\n        return xhr;\n      }\n\n      // Timeout\n      if (options.timeout > 0) {\n        xhrTimeout = setTimeout(function () {\n          xhr.abort();\n        }, options.timeout);\n      }\n\n      // 发送 XHR\n      xhr.send(sendData);\n\n      return xhr;\n    },\n  });\n\n  // 监听全局事件\n  //\n  // 通过 $(document).on('success.mdui.ajax', function (event, params) {}) 调用时，包含两个参数\n  // event: 事件对象\n  // params: {\n  //   xhr: XMLHttpRequest 对象\n  //   options: ajax 请求的配置参数\n  //   data: ajax 请求返回的数据\n  // }\n\n  // 全局 Ajax 事件快捷方法\n  // $(document).ajaxStart(function (event, xhr, options) {})\n  // $(document).ajaxSuccess(function (event, xhr, options, data) {})\n  // $(document).ajaxError(function (event, xhr, options) {})\n  // $(document).ajaxComplete(function (event, xhr, options) {})\n  each(ajaxEvent, function (name, eventName) {\n    $.fn[name] = function (fn) {\n      return this.on(eventName, function (e, params) {\n        fn(e, params.xhr, params.options, params.data);\n      });\n    };\n  });\n\n  return $;\n\n})));\n"]}